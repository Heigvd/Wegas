<domain application-root="${com.sun.aas.instanceRoot}/applications" version="13" log-root="${com.sun.aas.instanceRoot}/logs">
    <security-configurations>
        <authentication-service default="true" name="adminAuth" use-password-credential="true">
            <security-provider provider-name="adminSpc" name="spcrealm" type="LoginModule">
                <login-module-config module-class="com.sun.enterprise.admin.util.AdminLoginModule" control-flag="sufficient" name="adminSpecialLM">
                    <property name="config" value="server-config"></property>
                    <property name="auth-realm" value="admin-realm"></property>
                </login-module-config>
            </security-provider>
            <security-provider provider-name="adminFile" name="filerealm" type="LoginModule">
                <login-module-config module-class="com.sun.enterprise.security.auth.login.FileLoginModule" control-flag="sufficient" name="adminFileLM">
                    <property name="config" value="server-config"></property>
                    <property name="auth-realm" value="admin-realm"></property>
                </login-module-config>
            </security-provider>
        </authentication-service>
        <authorization-service default="true" name="authorizationService">
            <security-provider provider-name="simpleAuthorizationProvider" name="simpleAuthorization" type="Simple">
                <authorization-provider-config name="simpleAuthorizationProviderConfig" support-policy-deploy="false"></authorization-provider-config>
            </security-provider>
        </authorization-service>
    </security-configurations>
    <managed-job-config></managed-job-config>
    <system-applications />
    <applications />
    <resources>


        <!--<jdbc-resource pool-name="__TimerPool" object-type="system-admin" jndi-name="jdbc/__TimerPool"></jdbc-resource>-->
        <jdbc-resource ping="true" pool-name="__TimerPool" object-type="system-admin" jndi-name="jdbc/__TimerPool"></jdbc-resource>
        <jdbc-connection-pool datasource-classname="org.apache.derby.jdbc.EmbeddedDataSource" name="__TimerPool" res-type="javax.sql.DataSource">
            <property name="databaseName" value="${com.sun.aas.instanceRoot}/lib/databases/ejbtimer"></property>
            <property name="connectionAttributes" value=";create=true"></property>
        </jdbc-connection-pool>

        <jdbc-resource enable="false" pool-name="DerbyPool" object-type="system-all" jndi-name="jdbc/__default"></jdbc-resource>
        <jdbc-connection-pool is-isolation-level-guaranteed="false" datasource-classname="org.apache.derby.jdbc.EmbeddedDataSource" name="DerbyPool" res-type="javax.sql.DataSource">
            <property name="databaseName" value="${com.sun.aas.instanceRoot}/lib/databases/embedded_default" />
            <property name="connectionAttributes" value=";create=true" />
        </jdbc-connection-pool>
        <connector-connection-pool resource-adapter-name="jmsra" max-pool-size="250" steady-pool-size="1" name="jms/__defaultConnectionFactory-Connection-Pool" connection-definition-name="javax.jms.ConnectionFactory"></connector-connection-pool>
        <connector-resource pool-name="jms/__defaultConnectionFactory-Connection-Pool" object-type="system-all-req" jndi-name="jms/__defaultConnectionFactory"></connector-resource>
        <jdbc-connection-pool datasource-classname="org.postgresql.ds.PGSimpleDataSource" name="jdbc/wegas_dev_pool" res-type="javax.sql.DataSource">
            <property name="user" value="user"></property>
            <property name="password" value="1234"></property>
            <property name="portNumber" value="5432"></property>
            <property name="databaseName" value="wegas_test"></property>
            <property name="serverName" value="localhost"></property>
            <property name="URL" value="jdbc:postgresql://localhost:5432/wegas_test"></property>
            <property name="Password" value="1234"></property>
            <property name="DatabaseName" value="wegas_test"></property>
            <property name="User" value="user"></property>
            <property name="driverClass" value="org.postgresql.Driver"></property>
        </jdbc-connection-pool>
        <!--<jdbc-connection-pool datasource-classname="org.postgresql.ds.PGSimpleDataSource" name="jdbc/jcr_pool" res-type="javax.sql.DataSource">
          <property name="user" value="user"></property>
          <property name="password" value="1234"></property>
          <property name="portNumber" value="5432"></property>
          <property name="databaseName" value="jcr"></property>
          <property name="serverName" value="localhost"></property>
        </jdbc-connection-pool>-->
        <jdbc-resource pool-name="jdbc/wegas_dev_pool" jndi-name="jdbc/wegas_dev"></jdbc-resource>
        <!--<jdbc-resource pool-name="jdbc/jcr_pool" jndi-name="jdbc/jcr"></jdbc-resource>-->
        <context-service object-type="system-all" jndi-name="concurrent/__defaultContextService"></context-service>
        <managed-executor-service object-type="system-all" jndi-name="concurrent/__defaultManagedExecutorService"></managed-executor-service>
        <managed-scheduled-executor-service object-type="system-all" jndi-name="concurrent/__defaultManagedScheduledExecutorService"></managed-scheduled-executor-service>
        <managed-thread-factory object-type="system-all" jndi-name="concurrent/__defaultManagedThreadFactory"></managed-thread-factory>
    </resources>
    <servers>
        <server config-ref="server-config" name="server">
            <resource-ref ref="jdbc/__TimerPool"></resource-ref>
            <!--<resource-ref ref="jdbc/__default"></resource-ref>-->
            <resource-ref ref="jms/__defaultConnectionFactory"></resource-ref>
            <resource-ref ref="jdbc/wegas_dev"></resource-ref>
            <!--<resource-ref ref="jdbc/jcr"></resource-ref>-->
            <resource-ref ref="concurrent/__defaultContextService"></resource-ref>
            <resource-ref ref="concurrent/__defaultManagedExecutorService"></resource-ref>
            <resource-ref ref="concurrent/__defaultManagedScheduledExecutorService"></resource-ref>
            <resource-ref ref="concurrent/__defaultManagedThreadFactory"></resource-ref>
        </server>
    </servers>
    <nodes>
        <node name="localhost-domain1" install-dir="${com.sun.aas.productRoot}" type="CONFIG" node-host="localhost"></node>
    </nodes>
    <configs>
        <config name="server-config">
            <system-property name="JMS_PROVIDER_PORT" description="Port Number that JMS Service will listen for remote clients connection." value="7676"></system-property>
            <http-service>
                <access-log></access-log>
                <virtual-server network-listeners="http-listener-1,http-listener-2" id="server"></virtual-server>
                <!--<virtual-server network-listeners="admin-listener" id="__asadmin"></virtual-server>-->
            </http-service>
            <iiop-service>
                <orb use-thread-pool-ids="thread-pool-1"></orb>
                <iiop-listener address="0.0.0.0" port="3700" lazy-init="true" id="orb-listener-1"></iiop-listener>
                <iiop-listener address="0.0.0.0" port="3820" id="SSL" security-enabled="true">
                    <ssl classname="com.sun.enterprise.security.ssl.GlassfishSSLImpl" cert-nickname="s1as"></ssl>
                </iiop-listener>
                <iiop-listener address="0.0.0.0" port="3920" id="SSL_MUTUALAUTH" security-enabled="true">
                    <ssl classname="com.sun.enterprise.security.ssl.GlassfishSSLImpl" cert-nickname="s1as" client-auth-enabled="true"></ssl>
                </iiop-listener>
            </iiop-service>
            <admin-service system-jmx-connector-name="system" type="das-and-server">
                <jmx-connector address="0.0.0.0" port="8686" name="system" auth-realm-name="admin-realm" security-enabled="false"></jmx-connector>
                <property name="adminConsoleContextRoot" value="/admin"></property>
                <property name="adminConsoleDownloadLocation" value="${com.sun.aas.installRoot}/lib/install/applications/admingui.war"></property>
                <property name="ipsRoot" value="${com.sun.aas.installRoot}/.."></property>
                <das-config></das-config>
            </admin-service>
            <connector-service></connector-service>
            <transaction-service tx-log-dir="${com.sun.aas.instanceRoot}/logs"></transaction-service>
            <batch-runtime-configuration></batch-runtime-configuration>
            <jms-service default-jms-host="default_JMS_host" type="EMBEDDED">
                <jms-host port="${JMS_PROVIDER_PORT}" name="default_JMS_host" host="localhost"></jms-host>
            </jms-service>
            <cdi-service></cdi-service>
            <ejb-container>
                <ejb-timer-service></ejb-timer-service>
            </ejb-container>
            <web-container>
                <session-config>
                    <session-manager>
                        <manager-properties></manager-properties>
                        <store-properties></store-properties>
                    </session-manager>
                    <session-properties></session-properties>
                </session-config>
            </web-container>
            <diagnostic-service></diagnostic-service>
            <security-service>
                <auth-realm classname="com.sun.enterprise.security.auth.realm.file.FileRealm" name="admin-realm">
                    <property name="file" value="${com.sun.aas.instanceRoot}/config/admin-keyfile"></property>
                    <property name="jaas-context" value="fileRealm"></property>
                </auth-realm>
                <auth-realm classname="com.sun.enterprise.security.auth.realm.file.FileRealm" name="file">
                    <property name="file" value="${com.sun.aas.instanceRoot}/config/keyfile"></property>
                    <property name="jaas-context" value="fileRealm"></property>
                </auth-realm>
                <auth-realm classname="com.sun.enterprise.security.auth.realm.certificate.CertificateRealm" name="certificate"></auth-realm>
                <jacc-provider policy-provider="com.sun.enterprise.security.provider.PolicyWrapper" name="default" policy-configuration-factory-provider="com.sun.enterprise.security.provider.PolicyConfigurationFactoryImpl">
                    <property name="repository" value="${com.sun.aas.instanceRoot}/generated/policy"></property>
                </jacc-provider>
                <jacc-provider policy-provider="com.sun.enterprise.security.jacc.provider.SimplePolicyProvider" name="simple" policy-configuration-factory-provider="com.sun.enterprise.security.jacc.provider.SimplePolicyConfigurationFactory"></jacc-provider>
                <audit-module classname="com.sun.enterprise.security.ee.Audit" name="default">
                    <property name="auditOn" value="false"></property>
                </audit-module>
                <message-security-config auth-layer="SOAP">
                    <provider-config provider-type="client" provider-id="XWS_ClientProvider" class-name="com.sun.xml.wss.provider.ClientSecurityAuthModule">
                        <request-policy auth-source="content"></request-policy>
                        <response-policy auth-source="content"></response-policy>
                        <property name="encryption.key.alias" value="s1as"></property>
                        <property name="signature.key.alias" value="s1as"></property>
                        <property name="dynamic.username.password" value="false"></property>
                        <property name="debug" value="false"></property>
                    </provider-config>
                    <provider-config provider-type="client" provider-id="ClientProvider" class-name="com.sun.xml.wss.provider.ClientSecurityAuthModule">
                        <request-policy auth-source="content"></request-policy>
                        <response-policy auth-source="content"></response-policy>
                        <property name="encryption.key.alias" value="s1as"></property>
                        <property name="signature.key.alias" value="s1as"></property>
                        <property name="dynamic.username.password" value="false"></property>
                        <property name="debug" value="false"></property>
                        <property name="security.config" value="${com.sun.aas.instanceRoot}/config/wss-server-config-1.0.xml"></property>
                    </provider-config>
                    <provider-config provider-type="server" provider-id="XWS_ServerProvider" class-name="com.sun.xml.wss.provider.ServerSecurityAuthModule">
                        <request-policy auth-source="content"></request-policy>
                        <response-policy auth-source="content"></response-policy>
                        <property name="encryption.key.alias" value="s1as"></property>
                        <property name="signature.key.alias" value="s1as"></property>
                        <property name="debug" value="false"></property>
                    </provider-config>
                    <provider-config provider-type="server" provider-id="ServerProvider" class-name="com.sun.xml.wss.provider.ServerSecurityAuthModule">
                        <request-policy auth-source="content"></request-policy>
                        <response-policy auth-source="content"></response-policy>
                        <property name="encryption.key.alias" value="s1as"></property>
                        <property name="signature.key.alias" value="s1as"></property>
                        <property name="debug" value="false"></property>
                        <property name="security.config" value="${com.sun.aas.instanceRoot}/config/wss-server-config-1.0.xml"></property>
                    </provider-config>
                </message-security-config>
                <message-security-config auth-layer="HttpServlet">
                    <provider-config provider-type="server" provider-id="GFConsoleAuthModule" class-name="org.glassfish.admingui.common.security.AdminConsoleAuthModule">
                        <request-policy auth-source="sender"></request-policy>
                        <response-policy></response-policy>
                        <property name="loginPage" value="/login.jsf"></property>
                        <property name="loginErrorPage" value="/loginError.jsf"></property>
                    </provider-config>
                </message-security-config>
                <property name="default-digest-algorithm" value="SHA-256"></property>
            </security-service>
            <java-config classpath-suffix="" debug-options="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=9009" system-classpath="">
                <jvm-options>-XX:MaxPermSize=192m</jvm-options>
                <jvm-options>-client</jvm-options>
                <jvm-options>-Djava.awt.headless=true</jvm-options>
                <jvm-options>-Djdk.corba.allowOutputStreamSubclass=true</jvm-options>
                <jvm-options>-Djavax.xml.accessExternalSchema=all</jvm-options>
                <jvm-options>-Djavax.management.builder.initial=com.sun.enterprise.v3.admin.AppServerMBeanServerBuilder</jvm-options>
                <jvm-options>-XX:+UnlockDiagnosticVMOptions</jvm-options>
                <jvm-options>-Djava.endorsed.dirs=${com.sun.aas.installRoot}/modules/endorsed${path.separator}${com.sun.aas.installRoot}/lib/endorsed</jvm-options>
                <jvm-options>-Djava.security.policy=${com.sun.aas.instanceRoot}/config/server.policy</jvm-options>
                <jvm-options>-Djava.security.auth.login.config=${com.sun.aas.instanceRoot}/config/login.conf</jvm-options>
                <jvm-options>-Dcom.sun.enterprise.security.httpsOutboundKeyAlias=s1as</jvm-options>
                <jvm-options>-Xmx512m</jvm-options>
                <jvm-options>-Djavax.net.ssl.keyStore=${com.sun.aas.instanceRoot}/config/keystore.jks</jvm-options>
                <jvm-options>-Djavax.net.ssl.trustStore=${com.sun.aas.instanceRoot}/config/cacerts.jks</jvm-options>
                <jvm-options>-Djava.ext.dirs=${com.sun.aas.javaRoot}/lib/ext${path.separator}${com.sun.aas.javaRoot}/jre/lib/ext${path.separator}${com.sun.aas.instanceRoot}/lib/ext</jvm-options>
                <jvm-options>-Djdbc.drivers=org.apache.derby.jdbc.ClientDriver</jvm-options>
                <jvm-options>-DANTLR_USE_DIRECT_CLASS_LOADING=true</jvm-options>
                <jvm-options>-Dcom.sun.enterprise.config.config_environment_factory_class=com.sun.enterprise.config.serverbeans.AppserverConfigEnvironmentFactory</jvm-options>
                <jvm-options>-Dorg.glassfish.additionalOSGiBundlesToStart=org.apache.felix.shell,org.apache.felix.gogo.runtime,org.apache.felix.gogo.shell,org.apache.felix.gogo.command,org.apache.felix.shell.remote,org.apache.felix.fileinstall</jvm-options>
                <jvm-options>-Dosgi.shell.telnet.port=6666</jvm-options>
                <jvm-options>-Dosgi.shell.telnet.maxconn=1</jvm-options>
                <jvm-options>-Dosgi.shell.telnet.ip=127.0.0.1</jvm-options>
                <jvm-options>-Dgosh.args=--nointeractive</jvm-options>
                <jvm-options>-Dfelix.fileinstall.dir=${com.sun.aas.installRoot}/modules/autostart/</jvm-options>
                <jvm-options>-Dfelix.fileinstall.poll=5000</jvm-options>
                <jvm-options>-Dfelix.fileinstall.log.level=2</jvm-options>
                <jvm-options>-Dfelix.fileinstall.bundles.new.start=true</jvm-options>
                <jvm-options>-Dfelix.fileinstall.bundles.startTransient=true</jvm-options>
                <jvm-options>-Dfelix.fileinstall.disableConfigSave=false</jvm-options>
                <jvm-options>-XX:NewRatio=2</jvm-options>
                <jvm-options>-Dcom.ctc.wstx.returnNullForDefaultNamespace=true</jvm-options>
            </java-config>
            <network-config>
                <protocols>
                    <protocol name="http-listener-1">
                        <http max-connections="250" default-virtual-server="server">
                            <file-cache></file-cache>
                        </http>
                    </protocol>
                    <protocol name="http-listener-2" security-enabled="true">
                        <http max-connections="250" default-virtual-server="server">
                            <file-cache></file-cache>
                        </http>
                        <ssl ssl3-enabled="false" classname="com.sun.enterprise.security.ssl.GlassfishSSLImpl" cert-nickname="s1as"></ssl>
                    </protocol>
                    <protocol name="admin-listener">
                        <http encoded-slash-enabled="true" max-connections="250" default-virtual-server="__asadmin">
                            <file-cache></file-cache>
                        </http>
                    </protocol>
                </protocols>
                <network-listeners>
                    <network-listener protocol="http-listener-1" port="0" name="http-listener-1" thread-pool="http-thread-pool" transport="tcp"></network-listener>
                    <network-listener protocol="http-listener-2" port="0" name="http-listener-2" thread-pool="http-thread-pool" transport="tcp"></network-listener>
                </network-listeners>
                <transports>
                    <transport name="tcp"></transport>
                </transports>
            </network-config>
            <thread-pools>
                <thread-pool name="admin-thread-pool" max-queue-size="256" max-thread-pool-size="50"></thread-pool>
                <thread-pool name="http-thread-pool"></thread-pool>
                <thread-pool name="thread-pool-1" max-thread-pool-size="200"></thread-pool>
            </thread-pools>
            <monitoring-service>
                <module-monitoring-levels></module-monitoring-levels>
            </monitoring-service>
            <group-management-service>
                <failure-detection></failure-detection>
            </group-management-service>
            <monitoring-service>
                <module-monitoring-levels></module-monitoring-levels>
            </monitoring-service>
        </config>
    </configs>
    <property name="administrative.domain.name" value="domain1"></property>
    <secure-admin special-admin-indicator="718fe3ff-df18-49f8-84a0-3aeedb3250db">
        <secure-admin-principal dn="CN=localhost,OU=GlassFish,O=Oracle Corporation,L=Santa Clara,ST=California,C=US"></secure-admin-principal>
        <secure-admin-principal dn="CN=localhost-instance,OU=GlassFish,O=Oracle Corporation,L=Santa Clara,ST=California,C=US"></secure-admin-principal>
    </secure-admin>
    <clusters></clusters>
</domain>
