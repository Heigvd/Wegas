<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets" >

    <ui:composition template="app-default.xhtml">

        <ui:define name="title">#{editorGameController.currentGameModel.name}</ui:define>

        <ui:define name="head">
            <!-- Not a comment: hasWriteRight = #{writeRightNotNeeded ne 'true' && editorGameController.assertHasGameWriteRight()} -->

            <!-- Page styles -->
            <ui:fragment rendered="#{requestController.debugMode()}">
                <link rel="stylesheet" type="text/css" href="#{request.contextPath}/wegas-editor/css/wegas-editor.css" />
            </ui:fragment>
            <ui:fragment rendered="#{!requestController.debugMode()}">
                <link rel="stylesheet" type="text/css" href="#{request.contextPath}/wegas-editor/css/wegas-editor-min.css" />
            </ui:fragment>

            <!-- Stylesheets from current game model style library -->
            <!--<style type="text/css"># {editorGameController.combinedStyleSheet}</style>-->
            <ui:repeat var="sheet" value="#{editorGameController.currentGameModel.cssLibraryList}" varStatus="status">
                <style type="text/css"  id="css-library-#{sheet.getContentKey()}">
                    #{sheet.getContent().replaceAll("\\.\\./", "")}
                </style>
            </ui:repeat>

            <!-- Stylesheets from current game model cssUri property -->
            <ui:repeat rendered="#{editorGameController.currentGameModel.properties.cssUri != ''}"
                       var="o" value="#{editorGameController.currentGameModel.properties.cssUri.split(';')}" varStatus="status">
                <link rel="stylesheet" type="text/css" href="#{request.contextPath}/#{o.trim()}?#{wegasConfig.timestamp}" />
            </ui:repeat>

            <ui:insert name="editorHeader"/>

        </ui:define>

        <ui:define name="body">

            <!-- Client script (game model specific) -->
            <!--<ui:repeat rendered="#{editorGameController.currentGameModel.properties.clientScriptUri != ''}"
                       var="o" value="#{editorGameController.currentGameModel.properties.clientScriptUri.split(';')}" varStatus="status">
                <script type="text/javascript" src="#{o.trim()}?#{wegasConfig.timestamp}"></script>
            </ui:repeat>-->
            
            <script type="text/javascript">
                YUI().use("wegas-app", "wegas-scripteval", "wegas-websocketlistener", function(Y) {
                    Y.namespace("Wegas.Config").ExtraTabs = [/*Tab(s) cfg {label:"label", children:[]}*/];

                    var app = new Y.Wegas.App({
                        dataSources: {
                            Variable: {
                                //source: "rest/EditorPrivate/#{editorGameController.currentPlayer.id}/GameModel/#{editorGameController.currentGameModel.id}/VariableDescriptor",
                                //source: "rest/Editor/GameModel/#{editorGameController.currentGameModel.id}/VariableDescriptor",
                                source: "rest/Editor/GameModel/#{editorGameController.currentGameModel.id}/VariableDescriptor",
                                initialRequest: "",
                                plugins: [{
                                        fn: "VariableDescriptorCache",
                                        cfg: {
                                            indexes: ["id", "name"]
                                        }
                                    }, {
                                        fn: "ScriptEval"
                                    }, {/*
                                     fn: "WebSocketListener",
                                     cfg: {
                                     dataSource: "Pusher"
                                     }
                                     }, { */
                                        fn: "ServerLog"
                                    }]
                            },
                            Instance: {
                                source: "rest/Editor/GameModel/#{editorGameController.currentGameModel.id}/VariableDescriptor",
                                initialRequest: #{writeRightNotNeeded eq 'true' ?
                                        'undefined' : 
                                        '"/VariableInstance/AllPlayerInstances/' += editorGameController.currentPlayer.id += '"'
                                    },
                                plugins: [{
                                        fn: "VariableInstanceCache",
                                        cfg: {
                                            indexes: ["descriptorId"]
                                        }
                                    }]
                            },
                            Page: {
                                /* THIS IS NOT A COMMENT
                                 * <ui:fragment rendered="#{editorGameController.currentGameModel.properties.pagesUri == ''}">
                                 */
                                source: "rest/GameModel/#{editorGameController.currentGameModel.id}/Page/",
                                /* THIS IS NOT A COMMENT
                                 * </ui:fragment>
                                 */
                                /* THIS IS NOT A COMMENT
                                 * <ui:fragment rendered="#{editorGameController.currentGameModel.properties.pagesUri != ''}">
                                 */
                                source: "#{editorGameController.currentGameModel.properties.pagesUri}",
                                /* THIS IS NOT A COMMENT
                                 * </ui:fragment>
                                 */

                                initialFullRequest: '<ui:insert name="pageUri">/wegas-app/db/wegas-editor-layout.json</ui:insert>',
                                //initialFullRequest: 'wegas-app/db/wegas-editor-layout.json',
                                //initialRequest 'EditorLayout',
                                plugins: [{
                                        fn: "JSONSchema"
                                    }, {
                                        fn: "PageCache"
                                    }]
                            },
                            GameModel: {
                                source: "rest/Editor/GameModel",
                                initialRequest: "/#{editorGameController.currentGameModel.id}",
                                plugins: [{
                                        fn: "GameModelCache",
                                        cfg: {
                                            currentGameModelId: #{editorGameController.currentGameModel.id}
                                        }
                                    }]
                            },
                            Game: {
                                source: "rest/Editor/GameModel/#{editorGameController.currentGameModel.id}/Game",
                                initialRequest: "/#{editorGameController.currentGame.id}",
                                plugins: [{
                                        fn: "GameCache",
                                        cfg: {
                                            currentGameId: #{editorGameController.currentGame.id},
                                            currentTeamId: #{editorGameController.currentPlayer.team.id},
                                            currentPlayerId: #{editorGameController.currentPlayer.id}
                                        }
                                    }]
                            },
                            User: {
                                source: "rest/Editor/User",
                                initialRequest: "/#{requestController.currentUser.id}",
                                plugins: [{
                                        fn: "UserCache",
                                        cfg: {
                                            currentUserId: #{requestController.currentUser.id}
                                        }
                                    }]
                            },
                            Role: {
                                source: "rest/Role",
                                plugins: [{
                                        fn: "WegasCache"
                                    }]
                            },
                            Pusher: {
                                type: "PusherDataSource",
                                source: "rest/Pusher/",
                                //   applicationKey: "#{editorGameController.currentGameModel.properties.websocket}"
                                applicationKey: "#{editorGameController.getWegasProperty('pusher.key')}",
                                cluster: "#{editorGameController.getWegasProperty('pusher.cluster')}",
                                mode: '<ui:insert name="pusherMode">FULL</ui:insert>',
                                plugins: [{
                                        fn: "WebSocketListener",
                                        cfg: {
                                            dataSource: "Pusher"
                                        }
                                    }]
                            },
                            File: {
                                source: "rest/GameModel/#{editorGameController.currentGameModel.id}/File/",
                                plugins: [{
                                        fn: "JSONSchema"
                                    }]
                            }
                        }
                    });

                    /**
                     * THIS IS NOT A COMMENT !!!
                     * Writen as a comment to avoid parsing problems mixing JSF/JavaScript
                     */
                    ////<ui:insert name="editorFooter" />////                   // Footer script (for host.html)
                    /**
                     * END THIS IS NOT A COMMENT !!!
                     */

                    app.once("render", function() {                               // When the page is rendered
                        var gm = Y.Wegas.Facade.GameModel.cache.getCurrentGameModel(),
                            loadedPlayers = [Y.Wegas.Facade.Game.cache.getCurrentPlayer().get("id")];
                        Y.all(".wegas-title").setContent(gm.get("name"));       // Update the title

                        // Handle player change event
                        Y.Wegas.Facade.Game.cache.after('currentPlayerIdChange', function(e) {// Whenever the current player id changes
                            var player = Y.Wegas.Facade.Game.cache.getCurrentPlayer(),
                                preview = Y.Widget.getByNode(".editor-preview");

                            this.set('currentTeamId', player.get("teamId"));        // Update current teamid

                            preview.showOverlay();                                  // Show a loading overlay in the Preview tab during the request
                            if (Y.Array.indexOf(loadedPlayers, e.newVal) > -1) {
                                Y.later(10, this, function() {                          // Version 1: All data are loaded, only need to change trigger udate
                                    Y.Wegas.Facade.Variable.fire("update");
                                    preview.hideOverlay();
                                });
                            } else {
                                Y.Wegas.Facade.Variable.set("source", // Version 2: Only current player data are loaded, need to update the datasource
                                    //this.get("base") + "rest/EditorPrivate/" + player.get("id")
                                    Y.Wegas.app.get("base") + "rest/Private/" + player.get("id")
                                    + "/GameModel/" + Y.Wegas.Facade.GameModel.get("currentGameModelId")
                                    + "/VariableDescriptor");                         // Retrieve variable instances for the new player
                                Y.Wegas.Facade.Variable.once("response", function() {
                                    loadedPlayers.push(e.newVal);
                                    this.hideOverlay();
                                }, preview);
                                Y.Wegas.Facade.Variable.sendRequest({request: "/PlayerInstances/" + player.get("id")});
                            }
                        });
                        try {
                            Y.log("SoftClientScript");
                #{editorGameController.getClientScripts()}          // Run game model specific js footer
                        } catch (e) {
                            Y.log("Error running client scripts.", "error");
                        }
                    });
                    try {
                        Y.log("HardClientScript");
                #{editorGameController.staticClientScripts};
                    } catch (e) {
                        Y.log("Error running client scripts.", "error");
                    }
                    // Update instance config with global one. GameModel specific loaders.
                    Y.applyConfig(YUI_config);
                    app.render();                                               // Render app
                });
            </script>
        </ui:define>
    </ui:composition>
</html>
