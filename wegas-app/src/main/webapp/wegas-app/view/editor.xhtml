<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets">

    <ui:composition template="template/app-default.xhtml">

        <ui:define name="title">#{editorGameController.currentGameModel.name} - #{editorGameController.currentGame.name}</ui:define>

        <ui:define name="head">
            <link rel="stylesheet" type="text/css" href="#{request.contextPath}/wegas-editor/css/wegas-editor.css" />
            <style type="text/css">
                .yui3-skin-sam .yui3-button.wegas-title,
                .yui3-skin-sam .yui3-button.wegas-title:hover  {
                    font-weight: 900;
                    font-size: 22px;
                    line-height: 1.3em;
                    color: #6E6E6E;
                    background: url(../../wegas-app/images/wegas-logoicon-30.png) no-repeat,
                        url(../../wegas-app/images/wegas-submenuindicator.png) right center no-repeat;
                    padding: 0px 25px 0 36px;
                    margin: 8px 6px 6px 10px;
                    height: 30px;
                    text-shadow: 1px 0 1px lightgray, 0 1px 1px lightgray;
                }
            </style>
        </ui:define>

        <ui:define name="body">
            <script type="text/javascript">
              YUI().use("wegas-app",  'wegas-rightscss', /*'wegas-editorcss',*/ function (Y) {
                    var app = new Y.Wegas.App({
                        layoutSrc: 'wegas-app/db/wegas-editor-layout.json',
                        debug : true,
                        currentGameModel: #{editorGameController.currentGameModel.id},
                        currentGame: #{editorGameController.currentGame.id},
                        currentTeam: #{editorGameController.currentPlayer.team.id},
                        currentPlayer: #{editorGameController.currentPlayer.id},
                        currentUser: #{requestController.getCurrentUser().toJson()},
                        cssStylesheets: ["#{editorGameController.currentGameModel.cssUri}"],

                        dataSources: {
                            "GameModel": {
                                source: "rest/Editor/GameModel",
                                initialRequest: "/#{editorGameController.currentGameModel.id}",
                                plugins: [{
                                        fn: "GameModelDataSourceREST"
                                    }]
                            },
                            "GameIndex": {
                                source: "rest/Index/GameModel/#{editorGameController.currentGameModel.id}/Game",
                                initialRequest: "/",
                                plugins: [{
                                        fn: "GameDataSourceREST"
                                    }]
                            },
                            "Game": {
                                source: "rest/Public/GameModel/#{editorGameController.currentGameModel.id}/Game",
                                initialRequest: "/#{editorGameController.currentGame.id}",
                                plugins: [{
                                        fn: "GameDataSourceREST"
                                    }]
                            },
                            "Page": {
                                source: "#{editorGameController.currentGameModel.widgetsUri}",
                                plugins: [{
                                        fn: "DataSourceJSONSchema",
                                        cfg: {
                                            schema: {
                                                resultListLocator: "."
                                                //resultFields: ["name", "id", "@class"]
                                            }
                                        }
                                    }, {
                                        fn: "PageDataSourceREST"
                                    }]
                            },
                            "User": {
                                source: "rest/User",
                                initialRequest: "/#{requestController.getCurrentUser().id}",
                                plugins: [{
                                        fn: "UserDataSourceREST"
                                    }]
                            },
                            "Role": {
                                source: "rest/Role",
                                //initialRequest: "",
                                plugins: [{
                                        fn: "DataSourceREST"
                                    }]
                            },
                            "VariableDescriptor": {
                                source: "rest/Private/#{editorGameController.currentPlayer.id}/GameModel/#{editorGameController.currentGameModel.id}/VariableDescriptor",
                                initialRequest: "",
                                plugins: [{
                                        fn: "VariableDescriptorDataSourceREST"
                                    },{
                                        fn: "ScriptEval"
                                    }]
                            },
                            "File": {
                                source: "rest/File/GameModelId/#{editorGameController.currentGameModel.id}/" ,
                                plugins: [
                                    {
                                        fn: "DataSourceJSONSchema",
                                        cfg: {
                                            schema: {
                                                resultListLocator: "."
                                                //resultFields: ["name", "id", "@class"]
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        /**
                         * This field is used to override Entities edition menus.
                         * Use the target class name as the key.
                         */
                        editorMenus: {},

                        /**
                         * This field is used to override Entities edition forms.
                         * Use the target class name as the key.
                         */
                        editorForms: {}
                    });

                    app.after("render", function () {
                        var gm = Y.Wegas.GameModelFacade.rest.getCurrentGameModel();
                        Y.one(".wegas-title").setContent(gm.get("name"));
                    });

                    app.on('currentPlayerChange', function (e) {                // Whenever the current player changes
                        //"rest/Private/xx/GameModel/xx/VariableDescriptor",
                        this.set('currentTeam',
                        this.dataSources.Game.rest.getPlayerById(e.newVal).get("teamId")) // Update current team
                        Y.Wegas.VariableDescriptorFacade.set("source",
                        this.get("base") + "rest/Private/" + e.newVal + "/GameModel/"
                            + this.get("currentGameModel") + "/VariableDescriptor");

                        //Y.Wegas.VariableDescriptorFacade.fire("update");      // Fire an update event on the variable datasource
                    });
                    app.render();
                });
            </script>
        </ui:define>
    </ui:composition>
</html>
