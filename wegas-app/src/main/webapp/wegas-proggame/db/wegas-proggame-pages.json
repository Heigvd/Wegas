{
    "1": {
        "id": 1,
        "type": "AbsoluteLayout",
        "cssClass": "layout",
        "direction": "horizontal",
        "plugins": [{
                "fn": "CSSSize",
                "cfg": {
                    "styles": {
                        "position": "absolute",
                        "width": "1280px",
                        "height": "801px"
                    }
                }
            }],
        "children": [{
                "type": "Text",
                "content": "<div class=\"objective\">",
                "plugins": [{
                        "fn": "CSSPosition",
                        "cfg": {
                            "styles": {
                                "position": "absolute",
                                "top": "150px",
                                "left": "20px"
                            }
                        }
                    }, {
                        "fn": "CSSSize",
                        "cfg": {
                            "styles": {
                                "position": "absolute",
                                "height": "241px"
                            }
                        }
                    }]
            }, {
                "type": "Text",
                "content": "<div class=\"api\"><h1>Api</h1></div>",
                "plugins": [{
                        "fn": "CSSPosition",
                        "cfg": {
                            "styles": {
                                "position": "absolute",
                                "top": "387px",
                                "left": "20px"
                            }
                        }
                    }, {
                        "fn": "CSSSize",
                        "cfg": {
                            "styles": {
                                "position": "absolute",
                                "height": "241px"
                            }
                        }
                    }]
            }, {
                "type": "Button",
                "disabled": false,
                "label": "Battle!",
                "cssClass": "menu-button battle-button",
                "plugins": [{
                        "fn": "OpenPageAction",
                        "cfg": {
                            "subpageId": 2,
                            "targetEvent": "click",
                            "targetPageLoaderId": "maindisplayarea"
                        }
                    }, {
                        "fn": "CSSPosition",
                        "cfg": {
                            "styles": {
                                "position": "absolute",
                                "top": "0px",
                                "left": "543px"
                            }
                        }
                    }, {
                        "fn": "CSSSize",
                        "cfg": {
                            "styles": {
                                "position": "absolute",
                                "width": "178px",
                                "height": "72px"
                            }
                        }
                    }]
            }, {
                "type": "Button",
                "disabled": false,
                "label": "Mails",
                "cssClass": "menu-button mails-button",
                "plugins": [{
                        "fn": "OpenPageAction",
                        "cfg": {
                            "subpageId": 6,
                            "targetEvent": "click",
                            "targetPageLoaderId": "maindisplayarea"
                        }
                    }, {
                        "fn": "UnreadCount",
                        "cfg": {
                            "variable": {
                                "name": "inbox"
                            }
                        }
                    }, {
                        "fn": "CSSPosition",
                        "cfg": {
                            "styles": {
                                "position": "absolute",
                                "top": "0px",
                                "left": "728px"
                            }
                        }
                    }, {
                        "fn": "CSSSize",
                        "cfg": {
                            "styles": {
                                "position": "absolute",
                                "width": "148px",
                                "height": "66px"
                            }
                        }
                    }]
            }, {
                "type": "Button",
                "disabled": false,
                "label": "History",
                "disabled": true,
                "cssClass": "menu-button history-button",
                "plugins": [
                    {
                        "fn": "OpenPageAction",
                        "cfg": {
                            "subpageId": 3,
                            "targetEvent": "click",
                            "targetPageLoaderId": "maindisplayarea"
                        }
                    }, {
                        "fn": "CSSPosition",
                        "cfg": {
                            "styles": {
                                "position": "absolute",
                                "top": "0px",
                                "left": "886px"
                            }
                        }
                    }, {
                        "fn": "CSSSize",
                        "cfg": {
                            "styles": {
                                "position": "absolute",
                                "width": "138px",
                                "height": "67px"
                            }
                        }
                    }]
            }, {
                "cssClass": "menu-loginbutton",
                "disabled": false,
                "labelIsUser": false,
                "preferencePageId": 1000,
                "targetPageLoader": "maindisplayarea",
                "type": "LoginButton",
                "plugins": [
                    {
                        "fn": "OpenPageAction",
                        "cfg": {
                            "subpageId": 3,
                            "targetEvent": "click",
                            "targetPageLoaderId": "maindisplayarea"
                        }
                    }, {
                        "fn": "CSSPosition",
                        "cfg": {
                            "styles": {
                                "position": "absolute",
                                "top": "0px",
                                "left": "1030px"
                            }
                        }
                    }, {
                        "fn": "CSSSize",
                        "cfg": {
                            "styles": {
                                "position": "absolute",
                                "width": "178px",
                                "height": "72px"
                            }
                        }
                    }]
            }, {
                "type": "PageLoader",
                "pageLoaderId": "maindisplayarea",
                "defaultPageId": 2,
                "cssClass": "body game-area",
                "plugins": [{
                        "fn": "CSSPosition",
                        "cfg": {
                            "styles": {
                                "position": "absolute",
                                "top": "100px",
                                "bottom": "0px",
                                "right": "60px",
                                "left": "250px"
                            }
                        }
                    }]
            }]
    },
    "2": {
        "id": 2,
        "type": "PageLoader",
        "pageLoaderId": "leveldisplay",
        "variable": {
            "name": "currentLevel"
        }
    },
    "11": {
        "id": 3,
        "label": "Level 1.1 - First moves",
        "type": "ProgGameLevel",
        "arguments": [],
        "maxTurns": 1,
        "winningCondition": "objects[0].x===objects[1].x && objects[0].y===objects[1].y",
        "onWin": "currentLevel.value=12;money.value+=500",
        "cssClass": "wegas-proggame-level",
        "map": [
            [{"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}],
            [{"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}],
            [{"x": 0, "y": 0}, {"x": 0, "y": 1}, {"x": 0, "y": 1}, {"x": 0, "y": 1}, {"x": 0, "y": 1}, {"x": 0, "y": 0}, {"x": 0, "y": 0}],
            [{"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}],
            [{"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}]
        ],
        "api": [{
                "name": "move"
            }],
        "objects": [{
                "id": "Player",
                "components": "PC",
                "direction": 2,
                "x": 0,
                "y": 2,
                "actions": 20
            }, {
                "id": "Enemy",
                "direction": 4,
                "components": "NPC",
                "x": 5,
                "y": 2,
                "actions": 0,
                "collides": false
            }],
        "plugins": [{
                "fn": "Objective",
                "cfg": {
                    "fullObjective": "Votre avatar, le personnage de gauche, doit atteindre le personnage de droite. Pour ce faire, vous devez programmer la séquence d'instructions nécessaire au déplacement de votre avatar. Les instructions (fonctions) disponibles sont listées sous le bloque ?API? à gauche de l'écran. l'API (Application Programming Interface) de ce jeu vous proposera les fonctionnalités de base pour interagir avec votre avatar. Pour ce stage, il n'y en a qu'une, la fonction ?move? qui aura pour effet de déplacer votre avatar d'une case en avant dans le sens de marche. Il vous faut donc réaliser la séquence d'instructions complète afin d'atteindre l'autre personnage. Pour voir le résultat de l'exécution de votre code, cliquez sur la flèche verte.",
                    "globalObjective": "Programmer la séquence d'instructions pour déplacer votre avatar jusqu'au personnage de droite"
                }
            }]
    },
    "12": {
        "label": "Level 1.2",
        "type": "ProgGameLevel",
        "arguments": [],
        "maxTurns": 1,
        "winningCondition": "objects[0].x===objects[1].x && objects[0].y===objects[1].y",
        "onWin": "currentLevel.value=13",
        "cssClass": "wegas-proggame-level",
        "map": [
            [{"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}],
            [{"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 1}, {"x": 0, "y": 1}, {"x": 0, "y": 0}],
            [{"x": 0, "y": 0}, {"x": 0, "y": 1}, {"x": 0, "y": 1}, {"x": 0, "y": 0}, {"x": 0, "y": 0}],
            [{"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}],
            [{"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}]
        ],
        "api": [{
                "name": "move"
            }, {
                "name": "left"
            }, {
                "name": "right"
            }],
        "objects": [{
                "id": "Player",
                "components": "PC",
                "direction": 2,
                "x": 0,
                "y": 2,
                "actions": 999
            }, {
                "id": "Enemy",
                "components": "NPC",
                "direction": 4,
                "x": 4,
                "y": 1,
                "collides": false
            }],
        "plugins": [{
                "fn": "Objective",
                "cfg": {
                    "fullObjective": "La fonction \"move\" ne vous permettant pas de vous déplacer dans une autre direction que le sens de marche, il serait utile de pouvoir faire tourner votre avatar. Utiliser les nouvelles fonctions de l'API pour programmer la séquence d'instructions permettant à votre avatar d'atteindre l'autre personnage.  ",
                    "globalObjective": "Programmer la séquence d'instructions pour déplacer votre avatar jusqu'au personnage de droite"
                }
            }]
    },
    "13": {
        "label": "Level 1.3 - Getting harder",
        "type": "ProgGameLevel",
        "arguments": [],
        "maxTurns": 1,
        "winningCondition": "objects[0].x===objects[1].x && objects[0].y===objects[1].y",
        "onWin": "currentLevel.value=21",
        "cssClass": "wegas-proggame-level",
        "map": [
            [{"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}],
            [{"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 1}, {"x": 0, "y": 1}, {"x": 0, "y": 1}, {"x": 0, "y": 0}, {"x": 0, "y": 0}],
            [{"x": 0, "y": 0}, {"x": 0, "y": 1}, {"x": 0, "y": 1}, {"x": 0, "y": 0}, {"x": 0, "y": 1}, {"x": 0, "y": 1}, {"x": 0, "y": 0}],
            [{"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 1}, {"x": 0, "y": 1}, {"x": 0, "y": 1}, {"x": 0, "y": 0}, {"x": 0, "y": 0}],
            [{"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}]
        ],
        "api": [{
                "name": "move"
            }, {
                "name": "left"
            }, {
                "name": "right"
            }],
        "objects": [{
                "id": "Player",
                "components": "PC",
                "direction": 2,
                "x": 0,
                "y": 2,
                "actions": 999
            }, {
                "id": "Enemy",
                "components": "NPC",
                "direction": 4,
                "x": 6,
                "y": 2,
                "actions": 0,
                "collides": false
            }],
        "plugins": [{
                "fn": "Objective",
                "cfg": {
                    "fullObjective": "Utilisez les fonctions de l?API pour déplacer votre avatar jusqu?au personnage en jaune.",
                    "globalObjective": "Programmer la séquence d'instructions pour déplacer votre avatar jusqu'au personnage de droite"
                }
            }]
    },
    "5Unused": {
        "id": 5,
        "label": "Level 3",
        "type": "ProgGameLevel",
        "arguments": [],
        "maxTurns": 2,
        "winningCondition": "level.objects[0].life===0",
        "onWin": "currentLevel.value=7;money.value+=500;",
        "cssClass": "wegas-proggame-level",
        "api": [{
                "name": "move"
            }, {
                "name": "left"
            }, {
                "name": "right"
            }, {
                "name": "fire"
            }],
        "objects": [{
                "id": "Enemy",
                "components": "NPC",
                "direction": 4,
                "x": 7,
                "y": 3,
                "actions": 5,
                "ai": "left();\nmove();\nright();\nmove();\nmove();"
            }, {
                "id": "Player",
                "components": "PC",
                "direction": 2,
                "x": 1,
                "y": 3,
                "actions": 5
            }],
        "map": [
            [{"x": 21, "y": 17}, {"x": 21, "y": 17}, {"x": 21, "y": 17}, {"x": 21, "y": 17}, {"x": 21, "y": 17}, {"x": 21, "y": 17}, {"x": 21, "y": 17}, {"x": 21, "y": 17}],
            [{"x": 21, "y": 5}, {"x": 21, "y": 5}, {"x": 21, "y": 5}, {"x": 21, "y": 5}, {"x": 21, "y": 5}, {"x": 21, "y": 5}, {"x": 21, "y": 5}, {"x": 21, "y": 5}],
            [{"x": 21, "y": 5}, {"x": 21, "y": 5}, {"x": 17, "y": 5}, {"x": 17, "y": 5}, {"x": 17, "y": 5}, {"x": 21, "y": 5}, {"x": 21, "y": 5}, {"x": 21, "y": 5}],
            [{"x": 21, "y": 5}, {"x": 21, "y": 5}, {"x": 17, "y": 5}, {"x": 21, "y": 5}, {"x": 17, "y": 5}, {"x": 21, "y": 5}, {"x": 21, "y": 5}, {"x": 21, "y": 5}],
            [{"x": 17, "y": 5}, {"x": 17, "y": 5}, {"x": 17, "y": 5}, {"x": 21, "y": 5}, {"x": 17, "y": 5}, {"x": 17, "y": 5}, {"x": 17, "y": 5}, {"x": 17, "y": 5}],
            [{"x": 21, "y": 5}, {"x": 21, "y": 5}, {"x": 17, "y": 5}, {"x": 21, "y": 5}, {"x": 17, "y": 5}, {"x": 21, "y": 5}, {"x": 21, "y": 5}, {"x": 21, "y": 5}],
            [{"x": 21, "y": 5}, {"x": 21, "y": 5}, {"x": 17, "y": 5}, {"x": 17, "y": 5}, {"x": 17, "y": 5}, {"x": 21, "y": 5}, {"x": 21, "y": 5}, {"x": 21, "y": 5}],
            [{"x": 21, "y": 5}, {"x": 21, "y": 5}, {"x": 21, "y": 5}, {"x": 21, "y": 5}, {"x": 21, "y": 5}, {"x": 21, "y": 5}, {"x": 21, "y": 5}, {"x": 21, "y": 5}],
            [{"x": 21, "y": 17}, {"x": 21, "y": 17}, {"x": 21, "y": 17}, {"x": 21, "y": 17}, {"x": 21, "y": 17}, {"x": 21, "y": 17}, {"x": 21, "y": 17}, {"x": 21, "y": 17}]
        ],
        "plugins": [{
                "fn": "Objective",
                "cfg": {
                    "fullObjective": "Utilisez les fonctions de l?API pour déplacer votre avatar jusqu?au personnage en jaune.",
                    "globalObjective": "Programmer la séquence d'instructions pour déplacer votre avatar jusqu'au personnage de droite"
                }
            }]
    },
    "6": {
        "id": 6,
        "type": "InboxDisplay",
        "variable": {
            "name": "inbox"
        }
    },
    "21": {
        "id": 7,
        "arguments": [],
        "label": "Level 2.1",
        "type": "ProgGameLevel",
        "maxTurns": 1,
        "arguments": [],
        "winningCondition": "said.indexOf(\"Hello\")>=0 || said.indexOf(\"hello\")>=0",
        "onWin": "currentLevel.value=22",
        "cssClass": "wegas-proggame-level",
        "api": [{
                "name": "move"
            }, {
                "name": "left"
            }, {
                "name": "right"
            }, {
                "name": "say"
            }],
        "objects": [{
                "id": "Player",
                "components": "PC",
                "direction": 2,
                "x": 1,
                "y": 2,
                "actions": 5,
                "range": 3
            }, {
                "id": "Enemy",
                "direction": 4,
                "components": "NPC",
                "x": 4,
                "y": 2,
                "collides": false
            }],
        "map": [
            [{"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}],
            [{"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}],
            [{"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}],
            [{"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}],
            [{"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}],
            [{"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}]
        ],
        "plugins": [{
                "fn": "Objective",
                "cfg": {
                    "fullObjective": "Les fonctions utilisées lors des stages précédents ne possédaient aucun paramètre. Le nouvelle fonction de l?API nommée ?say? prend un paramètre. Ce paramètre est une chaîne de caractère représentant le texte de ce que va dire votre Avatar. Ce paramètre vous permet ainsi d?agir sur le comportement de votre avatar de manière plus fine que les précédentes fonctions, mais vous devez en contrepartie fournir une information supplémentaire lors de l?appel de cette fonctionnalité. Dans ce stage, utiliser simplement la nouvelle fonction ?say? afin de dire ?Hello? au personnage en face de vous.",
                    "globalObjective": "Dire \"Hello\" au personnage en jaune."
                }
            }]
    },
    "22": {
        "id": 7,
        "arguments": [],
        "label": "Level 2.2",
        "type": "ProgGameLevel",
        "maxTurns": 1,
        "arguments": [],
        "onStart": "panelValue = Math.round(Math.random()*100)",
        "winningCondition": "said === panelValue",
        "onWin": "currentLevel.value=23",
        "cssClass": "wegas-proggame-level",
        "api": [{
                "name": "move"
            }, {
                "name": "left"
            }, {
                "name": "right"
            }, {
                "name": "say"
            }, {
                "name": "read"
            }],
        "objects": [{
                "id": "Enemy",
                "direction": 4,
                "components": "NPC",
                "x": 5,
                "y": 2,
                "collides": false
            }, {
                "id": "Panel",
                "direction": 4,
                "components": "Panel",
                "value": "panelValue",
                "x": 2,
                "y": 2,
                "collides": false
            }, {
                "id": "Player",
                "components": "PC",
                "direction": 2,
                "x": 0,
                "y": 2,
                "actions": 5,
                "range": 3
            }],
        "map": [
            [{"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}],
            [{"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}],
            [{"x": 0, "y": 0}, {"x": 0, "y": 1}, {"x": 0, "y": 1}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}],
            [{"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}],
            [{"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}]
        ],
        "plugins": [{
                "fn": "Objective",
                "cfg": {
                    "fullObjective": "Tout programme traite une certaine quantité d?informations, il est donc nécessaire de pouvoir récupérer ces informations avant traitement. Dans ce stage vous devez déplacer votre avatar jusqu?au panneau afin d?y lire ce qui si trouve. Pour cela, L?API offre une nouvelle fonctionnalité nommée ?read?. Comme cette fonction retourne une valeur, il est essentiel de la stocker dans une variable afin de pouvoir la traiter par la suite. Déplacez votre avatar jusqu?au panneau, stockez ce qui y est écrit, puis déplacez votre avatar jusqu?au personnage en jaune afin de lui communiquer la valeur récupérée.",
                    "globalObjective": "Stocker la valeur écrite sur le panneau et la communiquer au personnage en jaune."
                }
            }]
    },
    "23": {
        "id": 7,
        "arguments": [],
        "label": "Level 2.3",
        "type": "ProgGameLevel",
        "maxTurns": 1,
        "arguments": [],
        "onStart": "panelValue1 = Math.round(Math.random()*10);panelValue2 = Math.round(Math.random()*10);",
        "winningCondition": "said === (panelValue1 + panelValue2)",
        "onWin": "currentLevel.value=23",
        "cssClass": "wegas-proggame-level",
        "api": [{
                "name": "move"
            }, {
                "name": "left"
            }, {
                "name": "right"
            }, {
                "name": "say"
            }, {
                "name": "read"
            }],
        "objects": [{
                "id": "Enemy",
                "direction": 4,
                "components": "NPC",
                "x": 5,
                "y": 2,
                "collides": false
            }, {
                "id": "Panel",
                "direction": 4,
                "components": "Panel",
                "value": "panelValue1",
                "x": 1,
                "y": 2,
                "collides": false
            }, {
                "id": "Panel",
                "direction": 4,
                "components": "Panel",
                "value": "panelValue2",
                "x": 3,
                "y": 2,
                "collides": false
            }, {
                "id": "Player",
                "components": "PC",
                "direction": 2,
                "x": 0,
                "y": 2,
                "actions": 5,
                "range": 3
            }],
        "map": [
            [{"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}],
            [{"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}],
            [{"x": 0, "y": 0}, {"x": 0, "y": 1}, {"x": 0, "y": 1}, {"x": 0, "y": 1}, {"x": 0, "y": 0}, {"x": 0, "y": 0}],
            [{"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}],
            [{"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}, {"x": 0, "y": 0}]
        ],
        "plugins": [{
                "fn": "Objective",
                "cfg": {
                    "fullObjective": "Vous devez récupérer les valeurs écrites sur deux panneaux différents dans des variables. Faites la somme de ces valeurs, et communiquez le résultat de l'addition au personnage en jaune.",
                    "globalObjective": "Sommer les deux valeurs des panneaux et communiquer le résultat au personnage en jaune"
                }
            }]
    },
    "8": {
        "label": "Level 4",
        "type": "ProgGameLevel",
        "maxTurns": 1,
        "winningCondition": "said.indexOf(\"Hello \" + getArgs().name) >= 0",
        "onWin": "currentLevel.value=4",
        "onStart": "var names= [\"Romuald\", \"Pete\", \"Roger\", \"Gandalf\", \"Jo\"], name = names[Math.floor((Math.random()*5))];pushArg(\"name\", name);log(\"My name is \" + name);",
        "cssClass": "wegas-proggame-level",
        "arguments": ["String name"],
        "api": [{
                "name": "move"
            }, {
                "name": "left"
            }, {
                "name": "right"
            }, {
                "name": "fire"
            }, {
                "name": "say"
            }],
        "objects": [{
                "id": "Player",
                "components": "PC",
                "direction": 2,
                "x": 1,
                "y": 2,
                "actions": 5
            }, {
                "id": "Enemy",
                "direction": 4,
                "components": "NPC",
                "x": 4,
                "y": 2,
                "collides": false
            }],
        "map": [
            [{"x": 21, "y": 5}, {"x": 21, "y": 5}, {"x": 21, "y": 5}, {"x": 21, "y": 5}, {"x": 21, "y": 5}],
            [{"x": 21, "y": 5}, {"x": 21, "y": 5}, {"x": 21, "y": 5}, {"x": 21, "y": 5}, {"x": 21, "y": 5}],
            [{"x": 17, "y": 5}, {"x": 17, "y": 5}, {"x": 17, "y": 5}, {"x": 17, "y": 5}, {"x": 17, "y": 5}],
            [{"x": 21, "y": 5}, {"x": 21, "y": 5}, {"x": 21, "y": 5}, {"x": 21, "y": 5}, {"x": 21, "y": 5}],
            [{"x": 21, "y": 5}, {"x": 21, "y": 5}, {"x": 21, "y": 5}, {"x": 21, "y": 5}, {"x": 21, "y": 5}]
        ],
        "plugins": [{
                "fn": "Popup",
                "cfg": {
                    "content": "Encore une fois bravo, mais ce n'était pas si dur. Pour passer le prochain niveau vous allez devoire utiliser des <i>variables</i>.<div class=\"wegas-proggame-def\">Dans un programme informatique, on va avoir en permanence besoin de stocker provisoirement des valeurs. Il peut s'agir de données issues d'un fichier sur disque dur, fournies par l'utilisateur (saisies au clavier), ou extraites d'une base de données. Il peut aussi s'agir de résultats obtenus au cours de l'exécution du programme. Ces données sont stockées en mémoire et ont une durée de vie égale au temps d'exécution du programme. Elles peuvent être de plusieurs types : des nombres, du texte, etc. Dès que l'on a besoin de stocker une valeur dans un programme, on utilise une variable.<br /><br />Pour employer une image, une variable est une boîte, repérée par une étiquette. Pour avoir accès au contenu de la boîte, il suffit de la désigner par son étiquette. En réalité, pour un ordinateur, Ces variables sont stockées dans la mémoire vive et elles sont désignées par des adresses binaires. Il est beaucoup plus facile d'employer des étiquettes de son choix, que de devoir manipuler des adresses binaires. Ainsi, la première chose à faire avant de pouvoir utiliser une variable est de définir « la boîte » et de lui donner une étiquette. Ceci se fait tout au début de l'algorithme, avant même les instructions proprement dites. C'est ce qu'on appelle la déclaration des variables.<br /><br />Le nom de la variable (l'étiquette de la boîte) obéit à des impératifs changeant selon les langages. Toutefois, une règle absolue est qu'ils peuvent comporter des lettres et des chiffres, mais qu'ils excluent tous les signes de ponctuation, en particulier les espaces. Un nom de variable correct commence impérativement par une lettre minuscule.<br /><br />Si pour des raisons purement pratiques on évite généralement les noms à rallonge, il faut tout de même veiller à choisir un nom pertinent en rapport à ce que représente la variable. Ainsi, on évitera d'utiliser de simples lettres souvent utilisées en mathématiques comme x, y, i, j,... qui sont peu explicites. On préférera des noms comme :compteur, temperature, abscisse, ordonnee, point, somme, moyenne...Des noms explicites apportent du sens, et rendent tout simplement les algorithmes plus lisibles et compréhensibles.</div>Dans cette exercice, recevrez votre première variable vous recevrez votre première variable en <i>paramètre</i> de votre fonction <i>main</i>. Cette variable contient le nom du charactère qui se tient en face de vous. Vous devez le saluer en utilisant ce nom, comme ceci:<div class=\"wegas-proggame-code\">var salutation = \"Hello \";<br />salutation = salutation + name;<br />say(salutation);</div>"
                }
            }]
    }
}
