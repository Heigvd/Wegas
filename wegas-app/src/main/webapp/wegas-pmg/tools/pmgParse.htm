
<?xml version = '1.0' encoding = 'ISO-8859-1' ?><!DOCTYPE html>
<!-- 
EXPORT QUERY

SELECT admin_choices.id AS cid,
admin_choices.name as cname, admin_choices.description as cdescription, private_name, appearance_stage, appearance_period,
admin_answers.name, admin_answers.description, answer_text
FROM admin_choices,  `admin_answers` 
WHERE admin_answers.source_id = admin_choices.id
AND admin_answers.source_type =  'AdminChoice'  AND admin_scenario_id=199

SELECT admin_player_actions.id AS cid,
admin_player_actions.name as cname, admin_player_actions.description as cdescription, private_name, appearance_stage, 
admin_answers.name, admin_answers.description, answer_text
FROM admin_player_actions,  `admin_answers` 
WHERE admin_answers.source_id = admin_player_actions.id
AND admin_answers.source_type =  'AdminPlayerAction'  AND admin_scenario_id=199

-->
<html>
    <body class = "yui3-skin-sam">
        <script type = "text/javascript" src = "http://yui.yahooapis.com/3.11.0/build/yui/yui-min.js" ></script>

        <script type = "text/javascript">
            YUI().use('node', function(Y) {
                Y.one("body").append("Action mode:<input class='actionMode' type='checkbox'></input>");
                Y.one("body").append("<textarea placeholder='input' class='input' style='width:100%; height:200px'></textarea><button class='process'>Transform</button> stage:<input style='width:300px' class='stage' type='text' placeholder='stagelist: Initiation,Planning,Execution,Closure'></input><hr>");
                Y.one("body").append("List label :<input class='listName' type='text' placeholder='label'></input>");
                Y.one("body").append("<textarea placeholder='output' class='output' style='width:100%; height:600px'></textarea>");
                function parseAll(input, stageNames, actionMode) {
                    var stages, out = [], i;
                    if (!stageNames) {
                        stageNames = "Initiation,Planning,Execution,Closure";
                    }
                    stages = stageNames.split(",");
                    for (i in stages) {
                        if (stages[i]) {
                            out.push(parse(input, +i + 1, actionMode, stages[i]));
                        }
                    }
                    var list = {"label": Y.one(".listName").getDOMNode().value || (actionMode ? "Actions" : "Questions"), "@class": "ListDescriptor",
                        "scope": {"@class": "TeamScope", "broadcastScope": "TeamScope"},
                        "defaultInstance": {"@class": "ListInstance"},
                        "items": out
                    };
                    return JSON.stringify(list, null, "\t");
                }
                function parse(input, stage, actionMode, label) {
                    var output = [];

                    stage = stage > 0 ? stage : null;

                    if (actionMode) {
                        for (var i in input) {
                            var inp = input[i];
                            if (stage !== null && inp.appearance_stage !== stage) {
                                continue;
                            }

                            if (!output[inp.cid]) {
                                output[inp.cid] = {
                                    "@class": "QuestionDescriptor",
                                    label: inp.cname,
                                    name: inp.cname,
                                    editorLabel: inp.private_name,
                                    description: inp.cdescription,
                                    allowMultipleReplies: "true",
                                    "defaultInstance": {
                                        "@class": "QuestionInstance"
                                    },
                                    "scope": {
                                        "@class": "TeamScope"
                                    },
                                    items: [{
                                            "@class": "ChoiceDescriptor",
                                            name: "Result",
                                            label: "Result",
                                            editorLabel: "Result",
                                            description: inp.description,
                                            "defaultInstance": {
                                                "@class": "ChoiceInstance"
                                            },
                                            "scope": {
                                                "@class": "TeamScope"
                                            },
                                            "results": []
                                        }]
                                };
                            }
                            var r = {
                                "@class": "Result",
                                "name": inp.name,
                                "answer": inp.answer_text

                            };
                            output[inp.cid].items[0].results.push(r);
                        }
                        var out = [];
                        for (var j in output) {
                            if (output[j]) {
                                out.push(output[j]);
                            }
                        }
                        var list = {"label": label, "@class": "ListDescriptor",
                            "scope": {"@class": "TeamScope", "broadcastScope": "TeamScope"},
                            "defaultInstance": {"@class": "ListInstance"},
                            "items": out
                        };
                        return list;
                        //  return JSON.stringify(list, null, "\t");
                    } else {
                        for (var i in input) {
                            var inp = input[i];
                            if (stage !== null && inp.appearance_stage !== stage) {
                                continue;
                            }

                            if (!output[inp.cid]) {
                                output[inp.cid] = {
                                    "@class": "QuestionDescriptor",
                                    label: inp.cname,
                                    name: inp.cname,
                                    editorLabel: inp.private_name,
                                    description: inp.cdescription,
                                    allowMultipleReplies: "false",
                                    "defaultInstance": {
                                        "@class": "QuestionInstance"
                                    },
                                    "scope": {
                                        "@class": "TeamScope"
                                    },
                                    items: []
                                };
                            }
                            var c = {
                                "@class": "SingleResultChoiceDescriptor",
                                name: inp.name,
                                label: inp.name,
                                editorLabel: inp.name,
                                description: inp.description,
                                "defaultInstance": {
                                    "@class": "ChoiceInstance"
                                },
                                "scope": {
                                    "@class": "TeamScope"
                                },
                                "results": [{
                                        "@class": "Result",
                                        "name": "Default",
                                        "answer": inp.answer_text
                                    }
                                ]
                            };
                            output[inp.cid].items.push(c);
                        }
                        var out = [];
                        for (var j in output) {
                            if (output[j]) {
                                out.push(output[j]);
                            }
                        }
                        var list = {"label": label, "@class": "ListDescriptor",
                            "scope": {"@class": "TeamScope", "broadcastScope": "TeamScope"},
                            "defaultInstance": {"@class": "ListInstance"},
                            "items": out
                        };
                        return list;
//                        return JSON.stringify(list, null, "\t");
                    }
                }

                Y.one(".process").on("click", function() {
                    try {
                        var o = JSON.parse(Y.one(".input").getDOMNode().value.replace(/\r\n|\n/g, "").replace(/\\'/g, "'").replace(/\t/g, "    "));
                        Y.one(".output").getDOMNode().value = parseAll(o, Y.one(".stage").getDOMNode().value, Y.one(".actionMode").getDOMNode().checked);
                    } catch (e) {
                        Y.one(".output").getDOMNode().value = e.message;
                    }
                });
            });
        </script>
    </body>
</html>


