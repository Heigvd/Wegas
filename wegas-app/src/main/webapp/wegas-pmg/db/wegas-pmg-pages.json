{
    "1": {
        "type": "AbsoluteLayout",
        "@name": "Main",
        "cssClass": "layout",
        "children": [{
                "type": "List",
                "cssClass": "vertical-menu",
                "plugins": [{
                        "fn": "CSSPosition",
                        "cfg": {
                            "styles": {
                                "position": "absolute",
                                "zIndex": "",
                                "top": "0px",
                                "left": "0px",
                                "bottom": "",
                                "right": ""
                            }
                        }
                    }, {
                        "fn": "CSSSize",
                        "cfg": {
                            "styles": {
                                "width": "100%",
                                "height": "100%"
                            }
                        }
                    }
                ],
                "direction": "vertical",
                "name": "layout",
                "children": [{
                        "type": "List",
                        "cssClass": "horizontal-menu pmg-header",
                        "plugins": [{
                                "fn": "CSSSize",
                                "cfg": {
                                    "styles": {
                                        "width": "auto",
                                        "height": "90px"
                                    }
                                }
                            }
                        ],
                        "direction": "horizontal",
                        "name": "header",
                        "children": [{
                                "type": "AbsoluteLayout",
                                "plugins": [{
                                        "fn": "CSSSize",
                                        "cfg": {
                                            "styles": {
                                                "width": "440px",
                                                "height": "90px"
                                            }
                                        }
                                    }
                                ],
                                "children": [{
                                        "type": "Text",
                                        "plugins": [{
                                                "fn": "CSSPosition",
                                                "cfg": {
                                                    "styles": {
                                                        "position": "absolute",
                                                        "top": "0px",
                                                        "left": "56px"
                                                    }
                                                }
                                            }, {
                                                "fn": "CSSSize",
                                                "cfg": {
                                                    "styles": {
                                                    }
                                                }
                                            }, {
                                                "fn": "CSSText",
                                                "cfg": {
                                                    "styles": {
                                                        "color": "#3C3C3C",
                                                        "fontSize": "24px",
                                                        "fontStyle": "italic",
                                                        "textAlign": ""
                                                    }
                                                }
                                            }, {
                                                "fn": "CSSStyles",
                                                "cfg": {
                                                    "styles": {
                                                        "font-variant": "small-caps"
                                                    }
                                                }
                                            }
                                        ],
                                        "content": "<p>Project Management Game</p>"
                                    }, {
                                        "type": "Image",
                                        "plugins": [{
                                                "fn": "CSSPosition",
                                                "cfg": {
                                                    "styles": {
                                                        "position": "absolute",
                                                        "top": "20px",
                                                        "left": "7px"
                                                    }
                                                }
                                            }, {
                                                "fn": "CSSSize",
                                                "cfg": {
                                                    "styles": {
                                                        "position": "absolute",
                                                        "height": "53px"
                                                    }
                                                }
                                            }
                                        ],
                                        "url": " http://wegas.albasim.ch/wegas-pmg/images/pmg-logo-1.png"
                                    }, {
                                        "type": "PmgBreadcrumb",
                                        "plugins": [{
                                                "fn": "CSSPosition",
                                                "cfg": {
                                                    "styles": {
                                                        "position": "absolute",
                                                        "top": "25px",
                                                        "left": "72px"
                                                    }
                                                }
                                            }, {
                                                "fn": "CSSSize",
                                                "cfg": {
                                                    "styles": {
                                                    }
                                                }
                                            }
                                        ],
                                        "locations": [
                                            "phase1Name",
                                            "phase2Name",
                                            "phase3Name",
                                            "phase4Name"
                                        ],
                                        "variable": "currentPhase"
                                    }, {
                                        "type": "Template",
                                        "cssClass": "pmg-period",
                                        "plugins": [{
                                                "fn": "CSSPosition",
                                                "cfg": {
                                                    "styles": {
                                                        "position": "absolute",
                                                        "zIndex": "10",
                                                        "top": "50px",
                                                        "left": "72px",
                                                        "bottom": "",
                                                        "right": ""
                                                    }
                                                }
                                            }, {
                                                "fn": "CSSSize",
                                                "cfg": {
                                                    "styles": {
                                                        "width": "",
                                                        "height": ""
                                                    }
                                                }
                                            }
                                        ],
                                        "variable": {
                                            "@class": "Script",
                                            "content": "Variable.find(gameModel, \"currentPhase\");\n"
                                        },
                                        "data": {
                                            "label": ""
                                        },
                                        "custom": "<div class='wegas-template-valuebox'><% if(this.label){ %><label><%= this.label %></label><% } %><div class='wegas-template-valuebox-units'><% var maxVal, phase = this.value, currentPeriod = Y.Wegas.Facade.Variable.cache.find('name', 'currentPeriod').get('items')[phase -1]; if (phase != 3) {maxVal = currentPeriod.getMaxValue()} else { var exec = Y.Wegas.Facade.Variable.cache.find('name', 'executionPeriods').get('value'); if (currentPeriod.getValue() >= exec) { maxVal = currentPeriod.getValue(); maxVal++} else { maxVal = exec}} %><% for(var i=+currentPeriod.getMinValue(); i < +maxVal + 1; i+=1){%><div class='wegas-template-valuebox-unit <%= +i < +currentPeriod.getValue() ? ' wegas-template-valuebox-previous' : '' %><%= +i === +currentPeriod.getValue() ? ' wegas-template-valuebox-selected' : '' %>'><%= ''+i %></div> <% } %></span></div></div>"
                                    }
                                ]
                            }, {
                                "type": "AbsoluteLayout",
                                "plugins": [{
                                        "fn": "CSSSize",
                                        "cfg": {
                                            "styles": {
                                                "width": "100px",
                                                "height": "90px"
                                            }
                                        }
                                    }
                                ],
                                "children": [{
                                        "label": "",
                                        "type": "Button",
                                        "cssClass": "pmg-nextweek",
                                        "plugins": [{
                                                "fn": "ConditionalDisable",
                                                "cfg": {
                                                    "condition": {
                                                        "@class": "Script",
                                                        "content": "var phase = Variable.find(gameModel, 'currentPhase').getValue(self), period = Variable.find(gameModel, 'currentPeriod').item(phase - 1);return  (phase != 3 && period.getMaxValue() == period.getValue(self)) || (phase == 3 && Variable.find(gameModel, 'projectCompleteness').getValue(self) >= 100);",
                                                        "language": "JavaScript"
                                                    },
                                                    "attribute": "cssClass",
                                                    "value": "passPhase"
                                                }
                                            }, {
                                                "fn": "ConditionalDisable2",
                                                "cfg": {
                                                    "condition": {
                                                        "@class": "Script",
                                                        "content": "var pCompleteness = Variable.find(gameModel, 'projectCompleteness').getValue(self), cPhase = Variable.find(gameModel, 'currentPhase').getValue(self), cPeriod = Variable.find(gameModel, 'currentPeriod').item(cPhase-1).getValue(self), lPhase = Variable.find(gameModel, 'phaseLimit').getValue(self), lPeriod = Variable.find(gameModel, 'periodLimit').getValue(self), executionPeriods = Variable.find(gameModel, 'executionPeriods').getValue(self); return ((cPhase >= lPhase) && (cPeriod >= lPeriod) && !((cPhase === 3) && (lPeriod > executionPeriods) && (pCompleteness < 100)))",
                                                        "language": "JavaScript"
                                                    },
                                                    "attribute": "disabled",
                                                    "value": ""
                                                }
                                            }, {
                                                "fn": "ConfirmExecuteScriptAction",
                                                "cfg": {
                                                    "targetEvent": "click",
                                                    "onClick": {
                                                        "@class": "Script",
                                                        "language": "JavaScript",
                                                        "content": "PMGSimulation.nextPeriod()"
                                                    },
                                                    "message": "Are you sure you want to continue?"
                                                }
                                            }, {
                                                "fn": "CSSSize",
                                                "cfg": {
                                                    "styles": {
                                                        "width": "90px",
                                                        "height": "46px"
                                                    }
                                                }
                                            }, {
                                                "fn": "CSSPosition",
                                                "cfg": {
                                                    "styles": {
                                                        "position": "absolute",
                                                        "top": "23px",
                                                        "left": "5px",
                                                        "zIndex": "10"
                                                    }
                                                }
                                            }, {
                                                "fn": "CSSBackground",
                                                "cfg": {
                                                    "styles": {
                                                        "backgroundColor": "#0981A9"
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                ]
                            }, {
                                "type": "AbsoluteLayout",
                                "plugins": [{
                                        "fn": "CSSSize",
                                        "cfg": {
                                            "styles": {
                                                "width": "90px",
                                                "height": "90px"
                                            }
                                        }
                                    }
                                ],
                                "children": [{
                                        "type": "Template",
                                        "cssClass": "wegas-gauge",
                                        "plugins": [{
                                                "fn": "CSSPosition",
                                                "cfg": {
                                                    "styles": {
                                                        "position": "absolute",
                                                        "zIndex": "10",
                                                        "top": "45px",
                                                        "left": "",
                                                        "bottom": "",
                                                        "right": ""
                                                    }
                                                }
                                            }, {
                                                "fn": "CSSSize",
                                                "cfg": {
                                                    "styles": {
                                                        "width": "90px",
                                                        "height": ""
                                                    }
                                                }
                                            }
                                        ],
                                        "variable": {
                                            "@class": "Script",
                                            "content": "Variable.find(gameModel, \"managementApproval\");\n"
                                        },
                                        "data": {
                                            "label": "Indicator1"
                                        },
                                        "custom": "<center><%= this.variable.get(\"label\") %></center>"
                                    }, {
                                        "type": "GaugeDisplay",
                                        "plugins": [{
                                                "fn": "CSSPosition",
                                                "cfg": {
                                                    "styles": {
                                                        "position": "absolute",
                                                        "zIndex": "",
                                                        "top": "",
                                                        "left": "",
                                                        "bottom": "",
                                                        "right": ""
                                                    }
                                                }
                                            }, {
                                                "fn": "CSSSize",
                                                "cfg": {
                                                    "styles": {
                                                        "width": "",
                                                        "height": ""
                                                    }
                                                }
                                            }
                                        ],
                                        "variable": {
                                            "@class": "Script",
                                            "content": "Variable.find(gameModel, \"managementApproval\");\n"
                                        },
                                        "label": "&nbsp;",
                                        "minValue": "",
                                        "maxValue": 200,
                                        "cfg": {
                                        }
                                    }
                                ]
                            }, {
                                "type": "AbsoluteLayout",
                                "plugins": [{
                                        "fn": "CSSSize",
                                        "cfg": {
                                            "styles": {
                                                "width": "90px",
                                                "height": "90px"
                                            }
                                        }
                                    }
                                ],
                                "children": [{
                                        "type": "Template",
                                        "cssClass": "wegas-gauge",
                                        "plugins": [{
                                                "fn": "CSSPosition",
                                                "cfg": {
                                                    "styles": {
                                                        "position": "absolute",
                                                        "zIndex": "10",
                                                        "top": "45px",
                                                        "left": "",
                                                        "bottom": "",
                                                        "right": ""
                                                    }
                                                }
                                            }, {
                                                "fn": "CSSSize",
                                                "cfg": {
                                                    "styles": {
                                                        "width": "90px",
                                                        "height": ""
                                                    }
                                                }
                                            }
                                        ],
                                        "variable": {
                                            "@class": "Script",
                                            "content": "Variable.find(gameModel, \"userApproval\");\n"
                                        },
                                        "data": {
                                            "label": "Indicator2"
                                        },
                                        "custom": "<center><%= this.variable.get(\"label\") %></center>"
                                    }, {
                                        "type": "GaugeDisplay",
                                        "plugins": [{
                                                "fn": "CSSSize",
                                                "cfg": {
                                                    "styles": {
                                                        "width": "",
                                                        "height": ""
                                                    }
                                                }
                                            }, {
                                                "fn": "CSSPosition",
                                                "cfg": {
                                                    "styles": {
                                                        "position": "absolute",
                                                        "top": "0px",
                                                        "left": "0px",
                                                        "zIndex": "10"
                                                    }
                                                }
                                            }
                                        ],
                                        "variable": {
                                            "@class": "Script",
                                            "content": "Variable.find(gameModel, \"userApproval\");\n"
                                        },
                                        "label": "&nbsp;",
                                        "minValue": "",
                                        "maxValue": 200,
                                        "cfg": {
                                        }
                                    }
                                ]
                            }, {
                                "type": "GaugeDisplay",
                                "plugins": [{
                                        "fn": "ConditionalDisable",
                                        "cfg": {
                                            "condition": {
                                                "@class": "Script",
                                                "content": "Variable.find(gameModel, \"currentPhase\").getValue(self)<3;\n"
                                            },
                                            "attribute": "disabled",
                                            "value": ""
                                        }
                                    }, {
                                        "fn": "CSSSize",
                                        "cfg": {
                                            "styles": {
                                                "width": "65px",
                                                "height": "90px"
                                            }
                                        }
                                    }
                                ],
                                "variable": {
                                    "@class": "Script",
                                    "content": "Variable.find(gameModel, \"quality\");\n"
                                },
                                "label": "Quality",
                                "minValue": "",
                                "maxValue": 200,
                                "cfg": {
                                }
                            }, {
                                "type": "GaugeDisplay",
                                "plugins": [{
                                        "fn": "ConditionalDisable",
                                        "cfg": {
                                            "condition": {
                                                "@class": "Script",
                                                "content": "Variable.find(gameModel, \"currentPhase\").getValue(self)<3;\n"
                                            },
                                            "attribute": "disabled",
                                            "value": ""
                                        }
                                    }, {
                                        "fn": "CSSSize",
                                        "cfg": {
                                            "styles": {
                                                "width": "65px",
                                                "height": "90px"
                                            }
                                        }
                                    }
                                ],
                                "variable": {
                                    "@class": "Script",
                                    "content": "Variable.find(gameModel, \"costs\");\n"
                                },
                                "label": "Costs",
                                "minValue": "",
                                "maxValue": 200,
                                "cfg": {
                                }
                            }, {
                                "type": "GaugeDisplay",
                                "plugins": [{
                                        "fn": "ConditionalDisable",
                                        "cfg": {
                                            "condition": {
                                                "@class": "Script",
                                                "content": "Variable.find(gameModel, \"currentPhase\").getValue(self)<3;\n"
                                            },
                                            "attribute": "disabled",
                                            "value": "65px"
                                        }
                                    }, {
                                        "fn": "CSSSize",
                                        "cfg": {
                                            "styles": {
                                                "width": "90px",
                                                "height": ""
                                            }
                                        }
                                    }
                                ],
                                "variable": {
                                    "@class": "Script",
                                    "content": "Variable.find(gameModel, \"delay\");\n"
                                },
                                "label": "Schedule",
                                "minValue": "",
                                "maxValue": 200,
                                "cfg": {
                                }
                            }, {
                                "type": "BoxTemplate",
                                "cssClass": "pmg-timevariable",
                                "plugins": [{
                                        "fn": "CSSPosition",
                                        "cfg": {
                                            "styles": {
                                                "position": "absolute",
                                                "top": "10px",
                                                "right": "10px"
                                            }
                                        }
                                    }
                                ],
                                "variable": {
                                    "content": "Variable.find('timeCards')"
                                },
                                "data": {
                                    "label": "Time cards"
                                }
                            }
                        ]
                    }, {
                        "type": "List",
                        "cssClass": "horizontal-nav-menu",
                        "plugins": [{
                                "fn": "CSSPosition",
                                "cfg": {
                                    "styles": {
                                        "position": "absolute",
                                        "zIndex": "",
                                        "top": "90px",
                                        "left": "0px",
                                        "bottom": "",
                                        "right": "0px"
                                    }
                                }
                            }
                        ],
                        "direction": "horizontal",
                        "name": "menu-nav-hori",
                        "children": [{
                                "label": "Home",
                                "type": "Button",
                                "plugins": [{
                                        "fn": "OpenPageAction",
                                        "cfg": {
                                            "targetEvent": "click",
                                            "subpageId": 15,
                                            "targetPageLoaderId": "maindisplayarea"
                                        }
                                    }
                                ]
                            }, {
                                "label": "Project",
                                "type": "Button",
                                "plugins": [{
                                        "fn": "OpenPageAction",
                                        "cfg": {
                                            "targetEvent": "click",
                                            "subpageId": 2,
                                            "targetPageLoaderId": "maindisplayarea"
                                        }
                                    }
                                ]
                            }, {
                                "label": "Tasks",
                                "type": "Button",
                                "plugins": [{
                                        "fn": "OpenPageAction",
                                        "cfg": {
                                            "targetEvent": "click",
                                            "subpageId": 13,
                                            "targetPageLoaderId": "maindisplayarea"
                                        }
                                    }, {
                                        "fn": "ConditionalDisable",
                                        "cfg": {
                                            "condition": {
                                                "@class": "Script",
                                                "content": "Variable.find(gameModel, 'currentPhase').getValue(self)<2",
                                                "language": "JavaScript"
                                            },
                                            "attribute": "disabled",
                                            "value": ""
                                        }
                                    }
                                ]
                            }, {
                                "label": "Gantt",
                                "type": "Button",
                                "plugins": [{
                                        "fn": "OpenPageAction",
                                        "cfg": {
                                            "targetEvent": "click",
                                            "subpageId": 14,
                                            "targetPageLoaderId": "maindisplayarea"
                                        }
                                    }, {
                                        "fn": "ConditionalDisable",
                                        "cfg": {
                                            "condition": {
                                                "@class": "Script",
                                                "content": "Variable.find(gameModel, 'currentPhase').getValue(self)<2",
                                                "language": "JavaScript"
                                            },
                                            "attribute": "disabled",
                                            "value": ""
                                        }
                                    }
                                ]
                            }, {
                                "label": "Resources",
                                "type": "Button",
                                "plugins": [{
                                        "fn": "OpenPageAction",
                                        "cfg": {
                                            "targetEvent": "click",
                                            "subpageId": 5,
                                            "targetPageLoaderId": "maindisplayarea"
                                        }
                                    }, {
                                        "fn": "ConditionalDisable",
                                        "cfg": {
                                            "condition": {
                                                "@class": "Script",
                                                "content": "Variable.find(gameModel, 'currentPhase').getValue(self)<2",
                                                "language": "JavaScript"
                                            },
                                            "attribute": "disabled",
                                            "value": ""
                                        }
                                    }
                                ]
                            }, {
                                "label": "EVM",
                                "type": "Button",
                                "plugins": [{
                                        "fn": "OpenPageAction",
                                        "cfg": {
                                            "targetEvent": "click",
                                            "subpageId": 10,
                                            "targetPageLoaderId": "maindisplayarea"
                                        }
                                    }, {
                                        "fn": "ConditionalDisable",
                                        "cfg": {
                                            "condition": {
                                                "@class": "Script",
                                                "content": "Variable.find(gameModel, \"currentPhase\").getValue(self)<2 || !Variable.find(gameModel, \"evm\").getValue(self)",
                                                "language": "JavaScript"
                                            },
                                            "attribute": "cssClass",
                                            "value": "hidden-button"
                                        }
                                    }
                                ]
                            }, {
                                "type": "LoginButton",
                                "cssClass": "menu-loginbutton",
                                "targetPageLoader": "maindisplayarea"
                            }
                        ]
                    }, {
                        "type": "List",
                        "cssClass": "horizontal-menu",
                        "direction": "horizontal",
                        "name": "folder",
                        "children": [{
                                "type": "PageLoader",
                                "cssClass": "body",
                                "plugins": [{
                                        "fn": "CSSPosition",
                                        "cfg": {
                                            "styles": {
                                            }
                                        }
                                    }, {
                                        "fn": "CSSBackground",
                                        "cfg": {
                                            "styles": {
                                                "backgroundColor": "#ffffff"
                                            }
                                        }
                                    }, {
                                        "fn": "CSSStyles",
                                        "cfg": {
                                            "styles": {
                                            }
                                        }
                                    }
                                ],
                                "pageLoaderId": "maindisplayarea",
                                "defaultPageId": 15
                            }, {
                                "type": "List",
                                "cssClass": "vertical-menu vertical-nav-menu",
                                "plugins": [{
                                        "fn": "CSSPosition",
                                        "cfg": {
                                            "styles": {
                                                "position": "absolute",
                                                "zIndex": "",
                                                "top": "120px",
                                                "left": "",
                                                "bottom": "0px",
                                                "right": "0px"
                                            }
                                        }
                                    }
                                ],
                                "direction": "vertical",
                                "name": "vertival-nav",
                                "children": [{
                                        "label": "",
                                        "type": "Button",
                                        "cssClass": "actions",
                                        "plugins": [{
                                                "fn": "Tooltip",
                                                "cfg": {
                                                    "content": "Actions"
                                                }
                                            }, {
                                                "fn": "OpenPageAction",
                                                "cfg": {
                                                    "targetEvent": "click",
                                                    "subpageId": 6,
                                                    "targetPageLoaderId": "maindisplayarea"
                                                }
                                            }
                                        ]
                                    }, {
                                        "label": "",
                                        "type": "Button",
                                        "cssClass": "questions",
                                        "plugins": [{
                                                "fn": "Tooltip",
                                                "cfg": {
                                                    "content": "Questions"
                                                }
                                            }, {
                                                "fn": "UnreadCount",
                                                "cfg": {
                                                    "variable": {
                                                        "content": "var currentPhase = Variable.find('currentPhase').getValue(self), currentPeriod = Variable.find('currentPeriod').item(currentPhase - 1).getValue(self), i, q, items = [], item; q = Variable.find('questions').item(currentPhase - 1); if (q) { for (i in q.get('items')) { item = q.item(i); if (item.get('@class') === 'QuestionDescriptor') { items.push(item); } else if (i == currentPeriod - 1 && item.get('@class') === 'ListDescriptor') { items = items.concat(item.flatten()); } } } return items;"
                                                    }
                                                }
                                            }, {
                                                "fn": "OpenPageAction",
                                                "cfg": {
                                                    "targetEvent": "click",
                                                    "subpageId": 7,
                                                    "targetPageLoaderId": "maindisplayarea"
                                                }
                                            }
                                        ]
                                    }, {
                                        "label": "",
                                        "type": "Button",
                                        "cssClass": "inbox",
                                        "plugins": [{
                                                "fn": "Tooltip",
                                                "cfg": {
                                                    "content": "Mailbox"
                                                }
                                            }, {
                                                "fn": "UnreadCount",
                                                "cfg": {
                                                    "variable": {
                                                        "name": "inbox"
                                                    }
                                                }
                                            }, {
                                                "fn": "OpenPageAction",
                                                "cfg": {
                                                    "targetEvent": "click",
                                                    "subpageId": 8,
                                                    "targetPageLoaderId": "maindisplayarea"
                                                }
                                            }
                                        ]
                                    }, {
                                        "label": "",
                                        "type": "Button",
                                        "cssClass": "history",
                                        "plugins": [{
                                                "fn": "Tooltip",
                                                "cfg": {
                                                    "content": "History"
                                                }
                                            }, {
                                                "fn": "OpenPageAction",
                                                "cfg": {
                                                    "targetEvent": "click",
                                                    "subpageId": 9,
                                                    "targetPageLoaderId": "maindisplayarea"
                                                }
                                            }
                                        ]
                                    }, {
                                        "label": "",
                                        "type": "Button",
                                        "cssClass": "help",
                                        "plugins": [{
                                                "fn": "OpenPageAction",
                                                "cfg": {
                                                    "targetEvent": "click",
                                                    "subpageId": 10,
                                                    "targetPageLoaderId": "maindisplayarea"
                                                }
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        ]
    },
    "2": {
        "cssClass": "project-page",
        "type": "List",
        "direction": "vertical",
        "children": [{
                "type": "PmgSlidePanel",
                "title": "Project Overview",
                "cssClass": "pmg-project-overview",
                "animation": false,
                "children": [{
                        "type": "Template",
                        "data": {
                        },
                        "custom": "<%  var names = ['Initiation', 'Planning', 'Executing', 'Closing'], projectCompleteness = Y.Wegas.Facade.Variable.cache.find('name', 'projectCompleteness').getInstance().get('value'), currentPhase = Y.Wegas.Facade.Variable.cache.find('name', 'currentPhase').getInstance().get('value'),currentPeriod = Y.Wegas.Facade.Variable.cache.find('name', 'currentPeriod').item(currentPhase -1).getInstance().get('value');%>\n\n<div class='projectCompleteness'><span class='label'>Progress</span><span class='variableValue'><%= parseInt(projectCompleteness) %>%</span></div>\n<div class=\"current-time\">\n<span class='label'>Current Time</span></div>\n<div class='current-stage'><span class='label'>- Phase</span><span class='variableValue'><%= names[currentPhase -1] %></span></div>\n<div class='current-period'><span class='label'>- Period</span><span class='variableValue'><%= currentPeriod %></span></div>\n\n",
                        "variable": {
                            "name": "currentPhase"
                        }
                    }
                ]
            }, {
                "type": "PmgSlidePanel",
                "title": "Finances",
                "cssClass": "finances",
                "animation": false,
                "children": [{
                        "type": "Template",
                        "data": {
                        },
                        "custom": "<%  var fixedCosts=0, wages=0, total=0, taskTotal=0, projectFixedCost = Y.Wegas.Facade.Variable.cache.find('name', 'projectFixedCosts').getInstance().get('value'), projectUnworkedHours = Y.Wegas.Facade.Variable.cache.find('name', 'projectUnworkedHours').getInstance().get('value'); for(var i=0; i<this.variable.get('items').length; i++) { var properties = this.variable.get('items')[i].getInstance().get('properties'); wages = wages + parseFloat(properties.wages); if (properties.completeness > 0) fixedCosts = fixedCosts + parseFloat(properties.fixedCosts); } taskTotal = wages + fixedCosts + projectUnworkedHours; total = taskTotal + projectFixedCost; %><div class='projectFixedCost'><span class='label'>Project Fixed Costs</span><span class='variableValue'><%= projectFixedCost %></span></div><div class='tasks'><div class='taskTotal'><span class='label'>Tasks</span><span class='variableValue'><%= taskTotal %></span></div><div class='wages'><span class='label'>- Wages</span><span class='variableValue'><%= wages %></span></div><div class='fixedCosts'><span class='label'>- Fixed Costs</span><span class='variableValue'><%= fixedCosts %></span></div><div class='unworkedHours'><span class='label'>- Unworked Hours</span><span class='variableValue'><%= projectUnworkedHours %></span></div></div><div class='total'><span class='label'>TOTAL</span><span class='variableValue'><%= total %></span></div>",
                        "variable": {
                            "name": "tasks"
                        }
                    }
                ]
            }, {
                "type": "PmgSlidePanel",
                "title": "Indicators History: Management and Users",
                "cssClass": "indicators-management",
                "animation": false,
                "children": [{
                        "height": "200px",
                        "chartType": "combo",
                        "width": "90%",
                        "horizontalGridlines": true,
                        "legendPosition": "bottom",
                        "type": "Chart",
                        "verticalGridlines": true,
                        "hMinEnd": {
                            "name": "executionPeriods"
                        },
                        "minValue": 0,
                        "maxValue": 200,
                        "vStepValue": 25,
                        "variables": [{
                                "name": "managementApproval",
                                "label": "Management"
                            }, {
                                "name": "userApproval",
                                "label": "Users"
                            }
                        ]
                    }
                ]
            }, {
                "type": "PmgSlidePanel",
                "title": "Indicators History: Quality, Costs, and Shedule",
                "cssClass": "indicators-quality",
                "animation": false,
                "children": [{
                        "height": "200px",
                        "chartType": "combo",
                        "width": "90%",
                        "horizontalGridlines": true,
                        "legendPosition": "bottom",
                        "type": "Chart",
                        "verticalGridlines": true,
                        "hMinEnd": {
                            "name": "executionPeriods"
                        },
                        "minValue": 0,
                        "maxValue": 200,
                        "vStepValue": 25,
                        "variables": [ {
                                "name": "costs",
                                "label": "Costs"
                            }, {
                                "name": "delay",
                                "label": "Shedule"
                            }, {
                                "name": "quality",
                                "label": "Quality"
                            }
                        ]
                    }
                ]
            }
        ],
        "@name": "Project"
    },
    "3": {
        "cssClass": "task-planning-page",
        "type": "List",
        "direction": "vertical",
        "children": [{
                "type": "PmgDatatable",
                "variable": {
                    "name": "tasks"
                },
                "defaultSort": null,
                "columnsCfg": [{
                        "key": "index",
                        "label": "No"
                    }, {
                        "key": "label",
                        "label": "Name"
                    }, {
                        "label": "Estimated</br>duration",
                        "width": "54px",
                        "name": "Estimatedduration",
                        "key": "instance.properties.duration",
                        "className": "right"
                    }, {
                        "label": "Fixed costs",
                        "name": "Fixedcosts",
                        "key": "instance.properties.fixedCosts",
                        "className": "right",
                        "formatter": "rounded"
                    }, {
                        "key": "requirements",
                        "label": "Ressources",
                        "formatter": "requieredRessources",
                        "sortable": false
                    }, {
                        "allowHTML": true,
                        "label": "Assigned resources",
                        "name": "assignedResources",
                        "formatter": "assignedRessources",
                        "sortable": false
                    }
                ],
                "plugins": [{
                        "fn": "Bac",
                        "cfg": {
                            "columnPosition": 4
                        }
                    }, {
                        "fn": "Taskonclickpopup"
                    }
                ]
            }, {
                "type": "Template",
                "variable": {
                    "@class": "Script",
                    "content": "Variable.find(gameModel, \"tasks\");\n"
                },
                "data": {
                    "label": ""
                },
                "custom": "<b>Total BAC: <%= (function (items) {\n    var sum = 0,\n    i;\n    for (i in items) {\n        sum += +items[i].getInstance().get('properties.bac');\n    }\n    return sum;\n}\n(this.variable.get('items')))\n %></b>"
            }
        ],
        "@name": "Tasks (Planning phase)"
    },
    "4": {
        "type": "List",
        "cssClass": "gantt-planning-page",
        "direction": "vertical",
        "children": [{
                "type": "PmgDatatable",
                "plugins": [{
                        "fn": "ScheduleDT",
                        "cfg": {
                            "variable": {
                                "name": "periodPhase3"
                            }
                        }
                    }, {
                        "fn": "Planification"
                    }, {
                        "fn": "Plannificationcolor"
                    }, {
                        "fn": "Taskonclickpopup"
                    }
                ],
                "variable": {
                    "name": "tasks"
                },
                "columnsCfg": [{
                        "key": "index",
                        "label": "No",
                        "sortable": true,
                        "allowHTML": true
                    }, {
                        "key": "label",
                        "label": "Name",
                        "sortable": true,
                        "allowHTML": true
                    }
                ],
                "defaultSort": null
            }
        ],
        "@name": "Gantt (Planning phase)"
    },
    "5": {
        "type": "List",
        "direction": "vertical",
        "children": [{
                "type": "PmgResourcesPanels",
                "cssClass": "resources-page"
            }
        ],
        "@name": "Resources"
    },
    "6": {
        "cssClass": "actions-page",
        "type": "List",
        "direction": "vertical",
        "children": [{
                "type": "Text",
                "content": "<div class='title'><h2>Available actions during this phase</h2></div><div class='title'><h2>Description</h2></div>"
            }, {
                "type": "MCQTabView",
                "highlightUnanswered": false,
                "variable": {
                    "content": "var currentPhase = Variable.find('currentPhase'); return Variable.find('actions').item(currentPhase.getValue(self) - 1);"
                }
            }, {
                "label": "",
                "type": "Button",
                "cssClass": "wegas-icon-pdf",
                "plugins": [{
                        "fn": "PrintActionPlugin",
                        "cfg": {
                            "targetEvent": "click",
                            "root": {
                                "@class": "Script",
                                "content": "var currentPhase = Variable.find('currentPhase'); return Variable.find('actions').item(currentPhase.getValue(self) - 1);"
                            },
                            "outputType": "html"
                        }
                    }, {
                        "fn": "CSSStyles",
                        "cfg": {
                            "styles": {
                                "bottom": "0px",
                                "position": "absolute"
                            }
                        }
                    }
                ],
                "data": {
                }
            }
        ],
        "@name": "Actions"
    },
    "7": {
        "cssClass": "questions-page",
        "type": "List",
        "direction": "vertical",
        "children": [{
                "type": "Template",
                "variable": {
                    "@class": "Script",
                    "content": "Variable.find(gameModel, \"timeUnit\");\n"
                },
                "data": {
                    "label": "week"
                },
                "custom": "<div class='title'><h2>Questions to answer this <%= this.variable.getValue() %></h2></div><div class='title'><h2>Details</h2></div>"
            }, {
                "type": "MCQTabView",
                "variable": {
                    "content": "var currentPhase = Variable.find('currentPhase').getValue(self), currentPeriod = Variable.find('currentPeriod').item(currentPhase - 1).getValue(self), i, q, items = [], item; q = Variable.find('questions').item(currentPhase - 1); if (q) { for (i in q.get('items')) { item = q.item(i); if (item.get('@class') === 'QuestionDescriptor') { items.push(item); } else if (i == currentPeriod - 1 && item.get('@class') === 'ListDescriptor') { items = items.concat(item.flatten()); } } } return items;"
                }
            }, {
                "label": "",
                "type": "Button",
                "cssClass": "wegas-icon-pdf",
                "plugins": [{
                        "fn": "PrintActionPlugin",
                        "cfg": {
                            "targetEvent": "click",
                            "root": {
                                "@class": "Script",
                                "content": "var currentPhase = Variable.find('currentPhase').getValue(self), currentPeriod = Variable.find('currentPeriod').item(currentPhase - 1).getValue(self), i, q, items = [], item; q = Variable.find('questions').item(currentPhase - 1); if (q) { for (i in q.get('items')) { item = q.item(i); if (item.get('@class') === 'QuestionDescriptor') { items.push(item); } else if (i == currentPeriod - 1 && item.get('@class') === 'ListDescriptor') { items = items.concat(item.flatten()); } } } return items;"
                            },
                            "outputType": "html"
                        }
                    }, {
                        "fn": "CSSStyles",
                        "cfg": {
                            "styles": {
                                "bottom": "0px",
                                "position": "absolute"
                            }
                        }
                    }
                ],
                "data": {
                }
            }
        ],
        "@name": "Questions"
    },
    "8": {
        "cssClass": "inbox-page",
        "type": "List",
        "direction": "vertical",
        "children": [{
                "type": "Text",
                "content": "<div class='title'><h2>Mailbox</h2></div><div class='title'><h2>Message</h2></div>"
            }, {
                "type": "InboxDisplay",
                "variable": {
                    "name": "inbox"
                }
            }
        ],
        "@name": "Mailbox"
    },
    "9": {
        "cssClass": "history-page",
        "type": "List",
        "direction": "vertical",
        "children": [{
                "type": "Text",
                "content": "<div class='title'><h2>History</h2></div><div class='title'><h2>Details</h2></div>"
            }, {
                "type": "InboxDisplay",
                "variable": {
                    "name": "history"
                },
                "template": "clean"
            }
        ],
        "@name": "History"
    },
    "10": {
        "cssClass": "evm-page",
        "direction": "vertical",
        "type": "List",
        "children": [{
                "type": "PmgSlidePanel",
                "title": "EVM",
                "cssClass": "evm",
                "animation": false,
                "children": [{
                        "type": "Chart",
                        "width": "90%",
                        "height": "400px",
                        "chartType": "combo",
                        "horizontalGridlines": true,
                        "legendPosition": "bottom",
                        "verticalGridlines": true,
                        "hMinEnd": {
                            "name": "executionPeriods"
                        },
                        "minValue": 0,
                        "variables": [{
                                "name": "planedValue",
                                "label": "PV (Planed Value)"
                            }, {
                                "name": "earnedValue",
                                "label": "EV (Earned Value)"
                            }, {
                                "name": "actualCost",
                                "label": "AC (Actual Cost)"
                            }
                        ]
                    }
                ]
            }
        ],
        "@name": "EVM"
    },
    "11": {
        "type": "List",
        "cssClass": "gantt-execution-page",
        "direction": "vertical",
        "children": [{
                "type": "PmgDatatable",
                "plugins": [{
                        "fn": "ScheduleDT",
                        "cfg": {
                            "variable": {
                                "name": "periodPhase3"
                            }
                        }
                    }, {
                        "fn": "Plannificationcolor"
                    }, {
                        "fn": "PlannificationActivityColor"
                    }, {
                        "fn": "PlannificationProgressColor"
                    }, {
                        "fn": "Taskonclickpopup"
                    }, {
                        "fn": "PMGLineCompleteness"
                    }
                ],
                "variable": {
                    "name": "tasks"
                },
                "columnsCfg": [{
                        "key": "index",
                        "label": "No",
                        "sortable": true,
                        "allowHTML": true
                    }, {
                        "key": "label",
                        "label": "Name",
                        "sortable": true,
                        "allowHTML": true
                    }, {
                        "label": "Realised",
                        "name": "Realised",
                        "width": "7%",
                        "key": "instance.properties.completeness",
                        "sortable": true,
                        "allowHTML": true,
                        "className": "right"
                    }
                ],
                "defaultSort": null
            }, {
                "type": "Text",
                "content": "<div class=\"pmg-legend\">\n<div>\n<div class=\"baseline\">&nbsp;</div>\nBaseline</div>\n<div>\n<div class=\"worked\">&nbsp;</div>\nWorked</div>\n<div>\n<div class=\"fill100\">&nbsp;</div>\nProjection</div>\n</div>"
            }
        ],
        "@name": "Gantt (Execution phase)"
    },
    "12": {
        "cssClass": "task-execution-page",
        "type": "List",
        "direction": "vertical",
        "children": [{
                "type": "PmgDatatable",
                "variable": {
                    "name": "tasks"
                },
                "defaultSort": null,
                "columnsCfg": [{
                        "key": "index",
                        "label": "No"
                    }, {
                        "key": "label",
                        "label": "Name"
                    }, {
                        "label": "Estimated</br>duration",
                        "width": "54px",
                        "name": "Estimatedduration",
                        "key": "instance.properties.duration",
                        "className": "right"
                    }, {
                        "label": "Realised",
                        "name": "Realised",
                        "width": "7%",
                        "key": "instance.properties.completeness",
                        "className": "right"
                    }, {
                        "name": "Quality",
                        "label": "Quality",
                        "className": "right",
                        "key": "instance.properties.quality",
                        "formatter": "quality"
                    }, {
                        "label": "Wages",
                        "name": "Wages",
                        "className": "right",
                        "key": "instance.properties.wages"
                    }, {
                        "label": "Fixed costs",
                        "name": "Fixedcosts",
                        "formatter": "rounded",
                        "className": "right",
                        "key": "instance.properties.fixedCosts"
                    }, {
                        "label": "BAC",
                        "name": "bac",
                        "className": "right",
                        "key": "instance.properties.bac"
                    }, {
                        "key": "requirements",
                        "label": "Resources",
                        "formatter": "requieredRessources",
                        "sortable": false
                    }, {
                        "label": "Assigned resources",
                        "name": "assignedResources",
                        "formatter": "assignedRessources",
                        "sortable": false
                    }
                ],
                "plugins": [{
                        "fn": "Taskonclickpopup"
                    }, {
                        "fn": "PMGLineCompleteness"
                    }
                ]
            }
        ],
        "@name": "Tasks (Execution phase)"
    },
    "13": {
        "type": "PageLoader",
        "cssClass": "task-page",
        "pageLoaderId": "taskPageLoader",
        "variable": {
            "name": "taskPage"
        }
    },
    "14": {
        "type": "PageLoader",
        "cssClass": "gantt-page",
        "pageLoaderId": "GanttPage",
        "variable": {
            "name": "ganttPage"
        }
    },
    "15": {
        "type": "AbsoluteLayout",
        "children": [{
                "type": "Template",
                "custom": "<%== this.value || 'Unable to find welcome text' %>",
                "data": {
                },
                "variable": {
                    "name": "homeText"
                },
                "plugins": [{
                        "fn": "CSSStyles",
                        "cfg": {
                            "styles": {
                                "padding": "2%"
                            }
                        }
                    }, {
                        "fn": "CSSPosition",
                        "cfg": {
                            "styles": {
                                "position": "absolute",
                                "top": "0px",
                                "left": "0px"
                            }
                        }
                    }, {
                        "fn": "CSSSize",
                        "cfg": {
                            "styles": {
                                "position": "absolute",
                                "width": "46%"
                            }
                        }
                    }
                ]
            }, {
                "type": "Text",
                "content": "<div class='title'><h2>News</h2></div></div>",
                "plugins": [{
                        "fn": "CSSPosition",
                        "cfg": {
                            "styles": {
                                "position": "absolute",
                                "top": "21px",
                                "left": "50%"
                            }
                        }
                    }
                ]
            }, {
                "type": "InboxList",
                "variable": {
                    "name": "news"
                },
                "plugins": [{
                        "fn": "CSSPosition",
                        "cfg": {
                            "styles": {
                                "position": "absolute",
                                "top": "50px",
                                "right": "0px"
                            }
                        }
                    }, {
                        "fn": "CSSSize",
                        "cfg": {
                            "styles": {
                                "position": "absolute",
                                "width": "50%"
                            }
                        }
                    }
                ]
            }
        ],
        "@name": "Home"
    },
    "16": {
        "type": "AbsoluteLayout",
        "cssClass": "pmg-properties",
        "children": [{
                "type": "Text",
                "plugins": [{
                        "fn": "CSSPosition",
                        "cfg": {
                            "styles": {
                                "position": "absolute",
                                "zIndex": "",
                                "top": "30px",
                                "left": "83px",
                                "bottom": "",
                                "right": ""
                            }
                        }
                    }, {
                        "fn": "CSSSize",
                        "cfg": {
                            "styles": {
                                "width": "",
                                "height": ""
                            }
                        }
                    }, {
                        "fn": "ConditionalDisable",
                        "cfg": {
                            "condition": {
                                "@class": "Script",
                                "content": "var advLimitDesc;\ntry {advLimitDesc = Variable.find(gameModel, \"advancementLimit\");} catch(e){}\nreturn advLimitDesc !== undefined;\n"
                            },
                            "attribute": "cssClass",
                            "value": "hidden"
                        }
                    }
                ],
                "content": "<p><strong>Advancement limit</strong></p>"
            }, {
                "label": "<span class='checkbox'>Advancement limit</span>",
                "type": "Button",
                "cssClass": "pmg-properties-button",
                "plugins": [{
                        "fn": "ExecuteScriptAction",
                        "cfg": {
                            "targetEvent": "click",
                            "onClick": {
                                "@class": "Script",
                                "language": "JavaScript",
                                "content": "var advLimitDesc; try {advLimitDesc = Variable.find(gameModel, \"advancementLimit\");} catch (e){}\n if (advLimitDesc != undefined){ advLimitDesc.setValue(self, !advLimitDesc.getValue(self));};"
                            }
                        }
                    }, {
                        "fn": "CSSPosition",
                        "cfg": {
                            "styles": {
                                "position": "absolute",
                                "top": "28px",
                                "left": "83px"
                            }
                        }
                    }, {
                        "fn": "CSSSize",
                        "cfg": {
                            "styles": {
                            }
                        }
                    }, {
                        "fn": "ConditionalDisable",
                        "cfg": {
                            "condition": {
                                "@class": "Script",
                                "content": "var  advLimitDesc; try {advLimitDesc = Variable.find(gameModel, \"advancementLimit\");} catch(e){} return (advLimitDesc === undefined || advLimitDesc.getValue(self));",
                                "language": "JavaScript"
                            },
                            "attribute": "cssClass",
                            "value": "selected"
                        }
                    }, {
                        "fn": "ConditionalDisable2",
                        "cfg": {
                            "condition": {
                                "@class": "Script",
                                "content": "var  advLimitDesc; try {advLimitDesc = Variable.find(gameModel, \"advancementLimit\");} catch(e){} return (advLimitDesc === undefined);",
                                "language": "JavaScript"
                            },
                            "attribute": "cssClass",
                            "value": "hidden"
                        }
                    }
                ]
            }, {
                "type": "AdvancementLimit",
                "plugins": [{
                        "fn": "CSSPosition",
                        "cfg": {
                            "styles": {
                                "position": "absolute",
                                "zIndex": "",
                                "top": "60px",
                                "left": "89px",
                                "bottom": "",
                                "right": ""
                            }
                        }
                    }, {
                        "fn": "CSSSize",
                        "cfg": {
                            "styles": {
                                "width": "",
                                "height": ""
                            }
                        }
                    }
                ]
            }, {
                "type": "Text",
                "plugins": [{
                        "fn": "CSSPosition",
                        "cfg": {
                            "styles": {
                                "position": "absolute",
                                "zIndex": "",
                                "top": "185px",
                                "left": "83px",
                                "bottom": "",
                                "right": ""
                            }
                        }
                    }, {
                        "fn": "CSSSize",
                        "cfg": {
                            "styles": {
                                "width": "",
                                "height": ""
                            }
                        }
                    }
                ],
                "content": "<p><strong>Options</strong></p>"
            }, {
                "label": "<span class='checkbox'>Autoreservation</span>",
                "type": "Button",
                "cssClass": "pmg-properties-button",
                "plugins": [{
                        "fn": "ExecuteScriptAction",
                        "cfg": {
                            "targetEvent": "click",
                            "onClick": {
                                "@class": "Script",
                                "content": "if (Variable.find(gameModel, \"autoReservation\").getValue(self)){\n    Variable.find(gameModel, \"autoReservation\").setValue(self, false);\n} else {\n    Variable.find(gameModel, \"autoReservation\").setValue(self, true);\n}\n"
                            }
                        }
                    }, {
                        "fn": "CSSPosition",
                        "cfg": {
                            "styles": {
                                "position": "absolute",
                                "zIndex": "",
                                "top": "210px",
                                "left": "83px",
                                "bottom": "",
                                "right": ""
                            }
                        }
                    }, {
                        "fn": "CSSSize",
                        "cfg": {
                            "styles": {
                                "width": "",
                                "height": ""
                            }
                        }
                    }, {
                        "fn": "ConditionalDisable",
                        "cfg": {
                            "condition": {
                                "@class": "Script",
                                "content": "Variable.find(gameModel, \"autoReservation\").getValue(self);\n"
                            },
                            "attribute": "cssClass",
                            "value": "selected"
                        }
                    }
                ],
                "data": {
                }
            }, {
                "label": "<span class='checkbox'>Force question replies</span>",
                "type": "Button",
                "cssClass": "pmg-properties-button",
                "plugins": [{
                        "fn": "ExecuteScriptAction",
                        "cfg": {
                            "targetEvent": "click",
                            "onClick": {
                                "@class": "Script",
                                "content": "if (Variable.find(gameModel, \"forceQuestionReplies\").getValue(self)){\n    Variable.find(gameModel, \"forceQuestionReplies\").setValue(self, false);\n} else {\n    Variable.find(gameModel, \"forceQuestionReplies\").setValue(self, true);\n}\n"
                            }
                        }
                    }, {
                        "fn": "CSSPosition",
                        "cfg": {
                            "styles": {
                                "position": "absolute",
                                "zIndex": "",
                                "top": "235px",
                                "left": "83px",
                                "bottom": "",
                                "right": ""
                            }
                        }
                    }, {
                        "fn": "CSSSize",
                        "cfg": {
                            "styles": {
                                "width": "",
                                "height": ""
                            }
                        }
                    }, {
                        "fn": "ConditionalDisable",
                        "cfg": {
                            "condition": {
                                "@class": "Script",
                                "content": "Variable.find(gameModel, \"forceQuestionReplies\").getValue(self);\n"
                            },
                            "attribute": "cssClass",
                            "value": "selected"
                        }
                    }
                ],
                "data": {
                }
            }, {
                "label": "<span class='checkbox'>EVM</span>",
                "type": "Button",
                "cssClass": "pmg-properties-button",
                "plugins": [{
                        "fn": "ExecuteScriptAction",
                        "cfg": {
                            "targetEvent": "click",
                            "onClick": {
                                "@class": "Script",
                                "content": "if (Variable.find(gameModel, \"evm\").getValue(self)){\n    Variable.find(gameModel, \"evm\").setValue(self, false);\n} else {\n    Variable.find(gameModel, \"evm\").setValue(self, true);\n}\n"
                            }
                        }
                    }, {
                        "fn": "CSSPosition",
                        "cfg": {
                            "styles": {
                                "position": "absolute",
                                "zIndex": "",
                                "top": "260px",
                                "left": "83px",
                                "bottom": "",
                                "right": ""
                            }
                        }
                    }, {
                        "fn": "CSSSize",
                        "cfg": {
                            "styles": {
                                "width": "",
                                "height": ""
                            }
                        }
                    }, {
                        "fn": "ConditionalDisable",
                        "cfg": {
                            "condition": {
                                "@class": "Script",
                                "content": "Variable.find(gameModel, \"evm\").getValue(self);\n"
                            },
                            "attribute": "cssClass",
                            "value": "selected"
                        }
                    }
                ],
                "data": {
                }
            }
        ],
        "@name": "Properties"
    },
    "17": {
        "type": "AbsoluteLayout",
        "children": [{
                "type": "Dashboard",
                "tableCfg": {
                    "columns": [{
                            "key": "name",
                            "label": " "
                        }, {
                            "label": "Phase",
                            "script": "var names = ['Initiation', 'Planning', 'Executing', 'Closing'];return names[Variable.find(gameModel, 'currentPhase').getValue(self)-1]"
                        }, {
                            "label": "Period",
                            "script": "var currentPhase = Variable.find('currentPhase'); return Variable.find('currentPeriod').item(currentPhase.getValue(self)-1).getValue(self)"
                        }, {
                            "label": "Questions",
                            "script": "var currentPhase = Variable.find('currentPhase').getValue(self), currentPeriod = Variable.find('currentPeriod').item(currentPhase - 1).getValue(self), i, count = 0, total = 0, inst, q, items = [], item; q = Variable.find('questions').item(currentPhase - 1); if (q) { for (i in q.get('items')) { item = q.item(i); if (item.get('@class') === 'QuestionDescriptor') { items.push(item); } else if (+i === currentPeriod - 1 && item.get('@class') === 'ListDescriptor') { items = items.concat(item.flatten()); } } } for (i = 0; i < items.length; i = i + 1) { inst = items[i].getInstance(self); count += (inst.get('replies').length > 0 && inst.get('active')) ? 1 : 0; total += inst.get('active') ? 1 : 0; } return count + '/' + total;"
                        }, {
                            "label": "Management",
                            "script": "Variable.find(gameModel, 'managementApproval').getValue(self)",
                            "formatter": "colored"
                        }, {
                            "label": "User",
                            "script": "Variable.find(gameModel, 'userApproval').getValue(self)",
                            "formatter": "colored"
                        }, {
                            "label": "Quality",
                            "script": "Variable.find(gameModel, 'quality').getValue(self)",
                            "formatter": "colored"
                        }, {
                            "label": "Cost",
                            "script": "Variable.find(gameModel, 'costs').getValue(self)",
                            "formatter": "colored"
                        }, {
                            "label": "Schedule",
                            "script": "Variable.find(gameModel, 'delay').getValue(self)",
                            "formatter": "colored"
                        }
                    ]
                }
            }
        ],
        "@name": "Dashboard"
    },
    "Team": {
        "type": "EditTeam"
    },
    "UserPreferences": {
        "type": "Form",
        "plugins": [{
                "fn": "UserPreferences"
            }
        ]
    }
}
