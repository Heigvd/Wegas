{
    "1": {
        "type": "AbsoluteLayout",
        "cssClass": "layout",
        "children": [
            {
                "type": "List",
                "cssClass": "pmg--app",
                "plugins": [
                    {
                        "fn": "CSSPosition",
                        "cfg": {
                            "styles": {
                                "position": "absolute",
                                "zIndex": "",
                                "top": "0px",
                                "left": "0px",
                                "bottom": "",
                                "right": ""
                            }
                        }
                    },
                    {
                        "fn": "CSSSize",
                        "cfg": {
                            "styles": {
                                "width": "100%",
                                "height": "100%"
                            }
                        }
                    }
                ],
                "direction": "vertical",
                "name": "layout",
                "children": [
                    {
                        "type": "List",
                        "cssClass": "pmg-header",
                        "direction": "horizontal",
                        "name": "header",
                        "children": [
                            {
                                "type": "List",
                                "cssClass": "pmg--header__identity",
                                "direction": "vertical",
                                "name": "identity",
                                "children": [
                                    {
                                        "type": "Box",
                                        "cssClass": "pmg--logo",
                                        "name": "logo PMG"
                                    },
                                    {
                                        "type": "Template",
                                        "custom": "<% var gameModel = Y.Wegas.Facade.GameModel.cache.getCurrentGameModel(), name; %> <p>Project Management Game<br /><b><% if(gameModel.get('properties.freeForAll')){ name = Y.Wegas.Facade.Game.cache.getCurrentPlayer().get('name'); }else{ name = Y.Wegas.Facade.Game.cache.getCurrentTeam().get('name'); } %><%= name %></b></p>"
                                    }
                                ]
                            },
                            {
                                "type": "List",
                                "cssClass": "pmg--header__taskbar",
                                "direction": "vertical",
                                "name": "taskbar",
                                "children": [
                                    {
                                        "type": "List",
                                        "cssClass": "pmg--taskbar__infos",
                                        "direction": "horizontal",
                                        "name": "infos",
                                        "children": [
                                            {
                                                "type": "List",
                                                "cssClass": "pmg--infos__phases",
                                                "direction": "horizontal",
                                                "name": "phases",
                                                "children": [
                                                    {
                                                        "type": "AbsoluteLayout",
                                                        "cssClass": "pmg--phases__state",
                                                        "children": [
                                                            {
                                                                "type": "PmgBreadcrumb",
                                                                "plugins": [
                                                                    {
                                                                        "fn": "CSSPosition",
                                                                        "cfg": {
                                                                            "styles": {
                                                                                "position": "absolute",
                                                                                "top": "0px",
                                                                                "left": "0px"
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "fn": "CSSSize",
                                                                        "cfg": {
                                                                            "styles": {}
                                                                        }
                                                                    }
                                                                ],
                                                                "locations": [
                                                                    "phase1Name",
                                                                    "phase2Name",
                                                                    "phase3Name",
                                                                    "phase4Name"
                                                                ],
                                                                "variable": "currentPhase"
                                                            },
                                                            {
                                                                "type": "Template",
                                                                "cssClass": "pmg-period",
                                                                "plugins": [
                                                                    {
                                                                        "fn": "CSSSize",
                                                                        "cfg": {
                                                                            "styles": {
                                                                                "width": "",
                                                                                "height": ""
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "fn": "CSSPosition",
                                                                        "cfg": {
                                                                            "styles": {
                                                                                "position": "absolute",
                                                                                "top": "0px",
                                                                                "left": "0px"
                                                                            }
                                                                        }
                                                                    }
                                                                ],
                                                                "variable": {
                                                                    "@class": "Script",
                                                                    "content": "Variable.find(gameModel, \"currentPhase\");\n"
                                                                },
                                                                "data": {
                                                                    "label": ""
                                                                },
                                                                "custom": "<% var maxVal, phase = this.value, currentPeriod = Y.Wegas.Facade.Variable.cache.find('name', 'currentPeriod').get('items')[phase -1]; if (phase != 3) {maxVal = currentPeriod.getMaxValue()} else { var exec = Y.Wegas.Facade.Variable.cache.find('name', 'executionPeriods').get('value'); if (currentPeriod.getValue() >= exec) { maxVal = currentPeriod.getValue(); maxVal++} else { maxVal = exec}} if(maxVal > 1){ %><div class='wegas-template-valuebox'><% if(this.label){ %><label><%= this.label %></label><% } %><div class='wegas-template-valuebox-units'><% for(var i=+currentPeriod.getMinValue(); i < +maxVal + 1; i+=1){%><div class='wegas-template-valuebox-unit <%= +i < +currentPeriod.getValue() ? ' wegas-template-valuebox-previous' : '' %><%= +i === +currentPeriod.getValue() ? ' wegas-template-valuebox-selected' : '' %>'><%= ''+i %></div> <% } %></span></div></div><% } %>"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "label": "",
                                                        "type": "Button",
                                                        "cssClass": "pmg-nextweek",
                                                        "plugins": [
                                                            {
                                                                "fn": "ConditionalDisable",
                                                                "cfg": {
                                                                    "condition": {
                                                                        "@class": "Script",
                                                                        "content": "var phase = Variable.find(gameModel, 'currentPhase').getValue(self), period = Variable.find(gameModel, 'currentPeriod').item(phase - 1);return  (phase != 3 && period.getMaxValue() == period.getValue(self)) || (phase == 3 && Variable.find(gameModel, 'projectCompleteness').getValue(self) >= 100);",
                                                                        "language": "JavaScript"
                                                                    },
                                                                    "attribute": "cssClass",
                                                                    "value": "passPhase"
                                                                }
                                                            },
                                                            {
                                                                "fn": "ConditionalDisable2",
                                                                "cfg": {
                                                                    "condition": {
                                                                        "@class": "Script",
                                                                        "content": "var pCompleteness = Variable.find(gameModel, 'projectCompleteness').getValue(self), cPhase = Variable.find(gameModel, 'currentPhase').getValue(self), cPeriod = Variable.find(gameModel, 'currentPeriod').item(cPhase-1).getValue(self), lPhase = Variable.find(gameModel, 'phaseLimit').getValue(self), lPeriod = Variable.find(gameModel, 'periodLimit').getValue(self), executionPeriods = Variable.find(gameModel, 'executionPeriods').getValue(self); return ((cPhase >= lPhase) && (cPeriod >= lPeriod) && !((cPhase === 3) && (lPeriod > executionPeriods) && (pCompleteness < 100)))",
                                                                        "language": "JavaScript"
                                                                    },
                                                                    "attribute": "disabled",
                                                                    "value": ""
                                                                }
                                                            },
                                                            {
                                                                "fn": "ConfirmExecuteScriptAction",
                                                                "cfg": {
                                                                    "targetEvent": "click",
                                                                    "onClick": {
                                                                        "@class": "Script",
                                                                        "language": "JavaScript",
                                                                        "content": "PMGSimulation.nextPeriod()"
                                                                    },
                                                                    "message": "Are you sure you want to continue?"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "List",
                                                "cssClass": "pmg--infos__indicators",
                                                "direction": "horizontal",
                                                "name": "indicators",
                                                "children": [
                                                    {
                                                        "type": "AbsoluteLayout",
                                                        "cssClass": "pmg--indicator",
                                                        "children": [
                                                            {
                                                                "type": "Template",
                                                                "cssClass": "pmg--indicator__label",
                                                                "plugins": [
                                                                    {
                                                                        "fn": "CSSPosition",
                                                                        "cfg": {
                                                                            "styles": {
                                                                                "position": "absolute",
                                                                                "top": "0px",
                                                                                "left": "0px",
                                                                                "zIndex": "10"
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "fn": "CSSSize",
                                                                        "cfg": {
                                                                            "styles": {}
                                                                        }
                                                                    }
                                                                ],
                                                                "variable": {
                                                                    "@class": "Script",
                                                                    "content": "Variable.find(gameModel, \"managementApproval\");\n"
                                                                },
                                                                "data": {
                                                                    "label": "Indicator1"
                                                                },
                                                                "custom": "<%= this.variable.get(\"label\") %>"
                                                            },
                                                            {
                                                                "type": "GaugeDisplay",
                                                                "plugins": [
                                                                    {
                                                                        "fn": "CSSPosition",
                                                                        "cfg": {
                                                                            "styles": {
                                                                                "position": "absolute",
                                                                                "zIndex": "10",
                                                                                "top": "0px",
                                                                                "left": "0px",
                                                                                "bottom": "",
                                                                                "right": ""
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "fn": "CSSSize",
                                                                        "cfg": {
                                                                            "styles": {
                                                                                "width": "",
                                                                                "height": ""
                                                                            }
                                                                        }
                                                                    }
                                                                ],
                                                                "variable": {
                                                                    "@class": "Script",
                                                                    "content": "Variable.find(gameModel, \"managementApproval\");\n"
                                                                },
                                                                "label": "&nbsp;",
                                                                "minValue": "",
                                                                "maxValue": 200,
                                                                "cfg": {
                                                                    "pointer": {
                                                                        "pointerlength": 0.55,
                                                                        "strokeWidth": 0.05,
                                                                        "color": "#FFFFFF"
                                                                    },
                                                                    "backgroundPercentColors": [
                                                                        [
                                                                            "0",
                                                                            "#d45951"
                                                                        ],
                                                                        [
                                                                            "0.328",
                                                                            "#343843"
                                                                        ],
                                                                        [
                                                                            "0.34",
                                                                            "#eec76a"
                                                                        ],
                                                                        [
                                                                            "0.658",
                                                                            "#343843"
                                                                        ],
                                                                        [
                                                                            "0.67",
                                                                            "#69bd7f"
                                                                        ]
                                                                    ],
                                                                    "lineWidth": 0.35,
                                                                    "angle": 150
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "AbsoluteLayout",
                                                        "cssClass": "pmg--indicator",
                                                        "children": [
                                                            {
                                                                "type": "Template",
                                                                "cssClass": "pmg--indicator__label",
                                                                "plugins": [
                                                                    {
                                                                        "fn": "CSSPosition",
                                                                        "cfg": {
                                                                            "styles": {
                                                                                "position": "absolute",
                                                                                "top": "0px",
                                                                                "left": "0px"
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "fn": "CSSSize",
                                                                        "cfg": {
                                                                            "styles": {}
                                                                        }
                                                                    }
                                                                ],
                                                                "variable": {
                                                                    "@class": "Script",
                                                                    "content": "Variable.find(gameModel, \"userApproval\");\n"
                                                                },
                                                                "data": {
                                                                    "label": "Indicator2"
                                                                },
                                                                "custom": "<%= this.variable.get(\"label\") %>"
                                                            },
                                                            {
                                                                "type": "GaugeDisplay",
                                                                "plugins": [
                                                                    {
                                                                        "fn": "CSSPosition",
                                                                        "cfg": {
                                                                            "styles": {
                                                                                "position": "absolute",
                                                                                "top": "0px",
                                                                                "left": "0px",
                                                                                "zIndex": "10"
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "fn": "CSSSize",
                                                                        "cfg": {
                                                                            "styles": {}
                                                                        }
                                                                    }
                                                                ],
                                                                "variable": {
                                                                    "@class": "Script",
                                                                    "content": "Variable.find(gameModel, \"userApproval\");\n"
                                                                },
                                                                "label": "&nbsp;",
                                                                "minValue": "",
                                                                "maxValue": 200,
                                                                "cfg": {
                                                                    "pointer": {
                                                                        "pointerlength": 0.55,
                                                                        "strokeWidth": 0.05,
                                                                        "color": "#FFFFFF"
                                                                    },
                                                                    "backgroundPercentColors": [
                                                                        [
                                                                            "0",
                                                                            "#d45951"
                                                                        ],
                                                                        [
                                                                            "0.328",
                                                                            "#343843"
                                                                        ],
                                                                        [
                                                                            "0.34",
                                                                            "#eec76a"
                                                                        ],
                                                                        [
                                                                            "0.658",
                                                                            "#343843"
                                                                        ],
                                                                        [
                                                                            "0.67",
                                                                            "#69bd7f"
                                                                        ]
                                                                    ],
                                                                    "lineWidth": 0.35,
                                                                    "angle": 150
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "GaugeDisplay",
                                                        "cssClass": "pmg--indicator pmg--indicator--divided",
                                                        "plugins": [
                                                            {
                                                                "fn": "ConditionalDisable",
                                                                "cfg": {
                                                                    "condition": {
                                                                        "@class": "Script",
                                                                        "content": "Variable.find(gameModel, \"currentPhase\").getValue(self)<3;\n"
                                                                    },
                                                                    "attribute": "disabled",
                                                                    "value": ""
                                                                }
                                                            }
                                                        ],
                                                        "variable": {
                                                            "@class": "Script",
                                                            "content": "Variable.find(gameModel, \"quality\");\n"
                                                        },
                                                        "label": "Quality",
                                                        "minValue": "",
                                                        "maxValue": 200,
                                                        "cfg": {
                                                            "pointer": {
                                                                "pointerlength": 0.55,
                                                                "strokeWidth": 0.05,
                                                                "color": "#FFFFFF"
                                                            },
                                                            "backgroundPercentColors": [
                                                                [
                                                                    "0",
                                                                    "#d45951"
                                                                ],
                                                                [
                                                                    "0.328",
                                                                    "#343843"
                                                                ],
                                                                [
                                                                    "0.34",
                                                                    "#eec76a"
                                                                ],
                                                                [
                                                                    "0.658",
                                                                    "#343843"
                                                                ],
                                                                [
                                                                    "0.67",
                                                                    "#69bd7f"
                                                                ]
                                                            ],
                                                            "lineWidth": 0.35,
                                                            "angle": 150
                                                        }
                                                    },
                                                    {
                                                        "type": "GaugeDisplay",
                                                        "cssClass": "pmg--indicator",
                                                        "plugins": [
                                                            {
                                                                "fn": "ConditionalDisable",
                                                                "cfg": {
                                                                    "condition": {
                                                                        "@class": "Script",
                                                                        "content": "Variable.find(gameModel, \"currentPhase\").getValue(self)<3;\n"
                                                                    },
                                                                    "attribute": "disabled",
                                                                    "value": ""
                                                                }
                                                            }
                                                        ],
                                                        "variable": {
                                                            "@class": "Script",
                                                            "content": "Variable.find(gameModel, \"costs\");\n"
                                                        },
                                                        "label": "Costs",
                                                        "minValue": "",
                                                        "maxValue": 200,
                                                        "cfg": {
                                                            "pointer": {
                                                                "pointerlength": 0.55,
                                                                "strokeWidth": 0.05,
                                                                "color": "#FFFFFF"
                                                            },
                                                            "backgroundPercentColors": [
                                                                [
                                                                    "0",
                                                                    "#d45951"
                                                                ],
                                                                [
                                                                    "0.328",
                                                                    "#343843"
                                                                ],
                                                                [
                                                                    "0.34",
                                                                    "#eec76a"
                                                                ],
                                                                [
                                                                    "0.658",
                                                                    "#343843"
                                                                ],
                                                                [
                                                                    "0.67",
                                                                    "#69bd7f"
                                                                ]
                                                            ],
                                                            "lineWidth": 0.35,
                                                            "angle": 150
                                                        }
                                                    },
                                                    {
                                                        "type": "GaugeDisplay",
                                                        "cssClass": "pmg--indicator",
                                                        "plugins": [
                                                            {
                                                                "fn": "ConditionalDisable",
                                                                "cfg": {
                                                                    "condition": {
                                                                        "@class": "Script",
                                                                        "content": "Variable.find(gameModel, \"currentPhase\").getValue(self)<3;\n"
                                                                    },
                                                                    "attribute": "disabled",
                                                                    "value": ""
                                                                }
                                                            }
                                                        ],
                                                        "variable": {
                                                            "@class": "Script",
                                                            "content": "Variable.find(gameModel, \"delay\");\n"
                                                        },
                                                        "label": "Schedule",
                                                        "minValue": "",
                                                        "maxValue": 200,
                                                        "cfg": {
                                                            "pointer": {
                                                                "pointerlength": 0.55,
                                                                "strokeWidth": 0.05,
                                                                "color": "#FFFFFF"
                                                            },
                                                            "backgroundPercentColors": [
                                                                [
                                                                    "0",
                                                                    "#d45951"
                                                                ],
                                                                [
                                                                    "0.328",
                                                                    "#343843"
                                                                ],
                                                                [
                                                                    "0.34",
                                                                    "#eec76a"
                                                                ],
                                                                [
                                                                    "0.658",
                                                                    "#343843"
                                                                ],
                                                                [
                                                                    "0.67",
                                                                    "#69bd7f"
                                                                ]
                                                            ],
                                                            "lineWidth": 0.35,
                                                            "angle": 150
                                                        }
                                                    },
                                                    {
                                                        "type": "AbsoluteLayout",
                                                        "cssClass": "pmg--time-cards",
                                                        "children": [
                                                            {
                                                                "type": "Text",
                                                                "plugins": [
                                                                    {
                                                                        "fn": "CSSPosition",
                                                                        "cfg": {
                                                                            "styles": {
                                                                                "position": "absolute",
                                                                                "top": "0px",
                                                                                "left": "0px"
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "fn": "CSSSize",
                                                                        "cfg": {
                                                                            "styles": {}
                                                                        }
                                                                    }
                                                                ],
                                                                "content": "<p>Time budget</p>"
                                                            },
                                                            {
                                                                "type": "NumberTemplate",
                                                                "cssClass": "pmg--number",
                                                                "plugins": [
                                                                    {
                                                                        "fn": "CSSPosition",
                                                                        "cfg": {
                                                                            "styles": {
                                                                                "position": "absolute",
                                                                                "top": "0px",
                                                                                "left": "0px",
                                                                                "zIndex": "10"
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "fn": "CSSSize",
                                                                        "cfg": {
                                                                            "styles": {}
                                                                        }
                                                                    }
                                                                ],
                                                                "variable": {
                                                                    "@class": "Script",
                                                                    "content": "Variable.find(gameModel, \"timeCards\");\n"
                                                                },
                                                                "data": {
                                                                    "label": ""
                                                                }
                                                            },
                                                            {
                                                                "type": "BoxTemplate",
                                                                "cssClass": "pmg--cards",
                                                                "variable": {
                                                                    "content": "Variable.find('timeCards')"
                                                                },
                                                                "data": {
                                                                    "label": ""
                                                                }
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "List",
                                        "cssClass": "pmg--taskbar__menus",
                                        "direction": "horizontal",
                                        "name": "menus",
                                        "children": [
                                            {
                                                "type": "List",
                                                "cssClass": "pmg--menus__main-menu",
                                                "direction": "horizontal",
                                                "name": "main-menu",
                                                "children": [
                                                    {
                                                        "label": "Home",
                                                        "type": "Button",
                                                        "plugins": [
                                                            {
                                                                "fn": "OpenPageAction",
                                                                "cfg": {
                                                                    "targetEvent": "click",
                                                                    "subpageId": "15",
                                                                    "targetPageLoaderId": "maindisplayarea",
                                                                    "variable": {
                                                                        "@class": "Script",
                                                                        "content": ""
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "data": {}
                                                    },
                                                    {
                                                        "label": "Project",
                                                        "type": "Button",
                                                        "plugins": [
                                                            {
                                                                "fn": "OpenPageAction",
                                                                "cfg": {
                                                                    "targetEvent": "click",
                                                                    "subpageId": 2,
                                                                    "targetPageLoaderId": "maindisplayarea"
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "label": "Tasks",
                                                        "type": "Button",
                                                        "plugins": [
                                                            {
                                                                "fn": "OpenPageAction",
                                                                "cfg": {
                                                                    "targetEvent": "click",
                                                                    "subpageId": 13,
                                                                    "targetPageLoaderId": "maindisplayarea"
                                                                }
                                                            },
                                                            {
                                                                "fn": "ConditionalDisable",
                                                                "cfg": {
                                                                    "condition": {
                                                                        "@class": "Script",
                                                                        "content": "Variable.find(gameModel, 'currentPhase').getValue(self)<2",
                                                                        "language": "JavaScript"
                                                                    },
                                                                    "attribute": "disabled",
                                                                    "value": ""
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "label": "Gantt",
                                                        "type": "Button",
                                                        "plugins": [
                                                            {
                                                                "fn": "OpenPageAction",
                                                                "cfg": {
                                                                    "targetEvent": "click",
                                                                    "subpageId": 14,
                                                                    "targetPageLoaderId": "maindisplayarea"
                                                                }
                                                            },
                                                            {
                                                                "fn": "ConditionalDisable",
                                                                "cfg": {
                                                                    "condition": {
                                                                        "@class": "Script",
                                                                        "content": "Variable.find(gameModel, 'currentPhase').getValue(self)<2",
                                                                        "language": "JavaScript"
                                                                    },
                                                                    "attribute": "disabled",
                                                                    "value": ""
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "label": "Resources",
                                                        "type": "Button",
                                                        "plugins": [
                                                            {
                                                                "fn": "OpenPageAction",
                                                                "cfg": {
                                                                    "targetEvent": "click",
                                                                    "subpageId": 5,
                                                                    "targetPageLoaderId": "maindisplayarea"
                                                                }
                                                            },
                                                            {
                                                                "fn": "ConditionalDisable",
                                                                "cfg": {
                                                                    "condition": {
                                                                        "@class": "Script",
                                                                        "content": "Variable.find(gameModel, 'currentPhase').getValue(self)<2",
                                                                        "language": "JavaScript"
                                                                    },
                                                                    "attribute": "disabled",
                                                                    "value": ""
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "label": "EVM",
                                                        "type": "Button",
                                                        "plugins": [
                                                            {
                                                                "fn": "OpenPageAction",
                                                                "cfg": {
                                                                    "targetEvent": "click",
                                                                    "subpageId": 10,
                                                                    "targetPageLoaderId": "maindisplayarea"
                                                                }
                                                            },
                                                            {
                                                                "fn": "ConditionalDisable",
                                                                "cfg": {
                                                                    "condition": {
                                                                        "@class": "Script",
                                                                        "content": "Variable.find(gameModel, \"currentPhase\").getValue(self)<2 || !Variable.find(gameModel, \"evm\").getValue(self)",
                                                                        "language": "JavaScript"
                                                                    },
                                                                    "attribute": "cssClass",
                                                                    "value": "hidden-button"
                                                                }
                                                            }
                                                        ]
                                                    }, {
                                                        "label": "Iterations",
                                                        "type": "Button",
                                                        "plugins": [
                                                            {
                                                                "fn": "OpenPageAction",
                                                                "cfg": {
                                                                    "targetEvent": "click",
                                                                    "subpageId": 20,
                                                                    "targetPageLoaderId": "maindisplayarea"
                                                                }
                                                            },
                                                            {
                                                                "fn": "ConditionalDisable",
                                                                "cfg": {
                                                                    "condition": {
                                                                        "@class": "Script",
                                                                        "content": "Variable.find(gameModel, \"currentPhase\").getValue(self)<2 || !Variable.find(gameModel, \"burndownEnabled\").getValue(self)",
                                                                        "language": "JavaScript"
                                                                    },
                                                                    "attribute": "cssClass",
                                                                    "value": "hidden-button"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "List",
                                                "cssClass": "pmg--menus__secondary-menu",
                                                "direction": "horizontal",
                                                "name": "secondary-menu",
                                                "children": [
                                                    {
                                                        "type": "Box",
                                                        "cssClass": "pmg--menu__divider",
                                                        "name": "divider"
                                                    },
                                                    {
                                                        "label": "",
                                                        "type": "Button",
                                                        "cssClass": "pmg--icon-action",
                                                        "plugins": [
                                                            {
                                                                "fn": "Tooltip",
                                                                "cfg": {
                                                                    "content": "<p>Actions</p>"
                                                                }
                                                            },
                                                            {
                                                                "fn": "OpenPageAction",
                                                                "cfg": {
                                                                    "targetEvent": "click",
                                                                    "subpageId": "6",
                                                                    "targetPageLoaderId": "maindisplayarea",
                                                                    "variable": {
                                                                        "@class": "Script",
                                                                        "content": ""
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "data": {}
                                                    },
                                                    {
                                                        "label": "",
                                                        "type": "Button",
                                                        "cssClass": "pmg--icon-question",
                                                        "plugins": [
                                                            {
                                                                "fn": "Tooltip",
                                                                "cfg": {
                                                                    "content": "Questions"
                                                                }
                                                            },
                                                            {
                                                                "fn": "UnreadCount",
                                                                "cfg": {
                                                                    "variable": {
                                                                        "content": "var currentPhase = Variable.find('currentPhase').getValue(self), currentPeriod = Variable.find('currentPeriod').item(currentPhase - 1).getValue(self), i, q, items = [], item; q = Variable.find('questions').item(currentPhase - 1); if (q) { for (i in q.get('items')) { item = q.item(i); if (item.get('@class') === 'QuestionDescriptor') { items.push(item); } else if (i == currentPeriod - 1 && item.get('@class') === 'ListDescriptor') { items = items.concat(item.flatten()); } } } return items;"
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "fn": "OpenPageAction",
                                                                "cfg": {
                                                                    "targetEvent": "click",
                                                                    "subpageId": 7,
                                                                    "targetPageLoaderId": "maindisplayarea"
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "label": "",
                                                        "type": "Button",
                                                        "cssClass": "pmg--icon-mail pmg--menu-btn-last",
                                                        "plugins": [
                                                            {
                                                                "fn": "Tooltip",
                                                                "cfg": {
                                                                    "content": "<p>Mailbox</p>"
                                                                }
                                                            },
                                                            {
                                                                "fn": "UnreadCount",
                                                                "cfg": {
                                                                    "variable": {
                                                                        "@class": "Script",
                                                                        "content": "Variable.find(gameModel, \"inbox\");\n"
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "fn": "OpenPageAction",
                                                                "cfg": {
                                                                    "targetEvent": "click",
                                                                    "subpageId": 8,
                                                                    "targetPageLoaderId": "maindisplayarea"
                                                                }
                                                            }
                                                        ],
                                                        "data": {}
                                                    },
                                                    {
                                                        "type": "Box",
                                                        "cssClass": "pmg--menu__divider",
                                                        "name": "divider"
                                                    },
                                                    {
                                                        "label": "",
                                                        "type": "Button",
                                                        "cssClass": "pmg--icon-history",
                                                        "plugins": [
                                                            {
                                                                "fn": "Tooltip",
                                                                "cfg": {
                                                                    "content": "<p>History</p>"
                                                                }
                                                            },
                                                            {
                                                                "fn": "OpenPageAction",
                                                                "cfg": {
                                                                    "targetEvent": "click",
                                                                    "subpageId": "9",
                                                                    "targetPageLoaderId": "maindisplayarea",
                                                                    "variable": {
                                                                        "@class": "Script",
                                                                        "content": ""
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "data": {}
                                                    },
                                                    {
                                                        "type": "LoginButton",
                                                        "cssClass": "menu-loginbutton",
                                                        "forcedLabel": "",
                                                        "targetPageLoader": "maindisplayarea"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "List",
                        "cssClass": "pmg--main-area",
                        "direction": "horizontal",
                        "name": "main",
                        "children": [
                            {
                                "type": "PageLoader",
                                "cssClass": "pmg--body",
                                "pageLoaderId": "maindisplayarea",
                                "defaultPageId": "15",
                                "variable": "",
                                "page": {
                                    "@class": "Script",
                                    "content": ""
                                }
                            }
                        ]
                    }
                ]
            }
        ],
        "@name": "Main"
    },
    "2": {
        "type": "List",
        "cssClass": "project-page",
        "direction": "horizontal",
        "name": "folder",
        "children": [
            {
                "type": "List",
                "cssClass": "pmg-project-overview",
                "direction": "horizontal",
                "name": "Overview",
                "children": [
                    {
                        "type": "List",
                        "cssClass": "pmg-overview-left",
                        "direction": "horizontal",
                        "name": "Project Overview",
                        "children": [
                            {
                                "type": "Text",
                                "cssClass": "pmg-overview-title",
                                "content": "<h2>Project overview</h2>"
                            },
                            {
                                "type": "List",
                                "cssClass": "pmg-project-overview-content initial-budget",
                                "direction": "horizontal",
                                "name": "initial budget",
                                "children": [
                                    {
                                        "type": "Text",
                                        "cssClass": "label",
                                        "content": "<p>Initial Budget</p>"
                                    },
                                    {
                                        "type": "NumberInput",
                                        "cssClass": "variableValue",
                                        "variable": {
                                            "@class": "Script",
                                            "content": "Variable.find(gameModel, \"initialBudget\");\n"
                                        },
                                        "readonly": {
                                            "@class": "Script",
                                            "content": "Variable.find(gameModel, \"currentPhase\").getValue(self)>1;\n"
                                        }
                                    }
                                ]
                            },
                            {
                                "type": "Template",
                                "cssClass": "pmg-project-overview-content",
                                "variable": {
                                    "@class": "Script",
                                    "content": "Variable.find(gameModel, \"tasks\");\n"
                                },
                                "data": {
                                    "label": "Budgeted at completion (BAC)"
                                },
                                "custom": "<% \nvar bacs = Y.Wegas.PMGHelper.getBACTotal(),\nib = Y.Wegas.PMGHelper.getInitialBudget(),\novercost = (ib <= 0 ? \"\" : Math.round(parseInt((bacs * 10000 / ib), 10)/100)  + \"% of Initial Budget\")\n\n%>\n\n<div class='bacs'>\n    <span class='label'><%= this.label %></span>\n    <span class='variableValue'><%=  bacs %></span><span class='variablePercent'><%= overcost %></span>\n</div>"
                            },
                            {
                                "type": "Template",
                                "cssClass": "pmg-project-overview-content",
                                "variable": {
                                    "@class": "Script",
                                    "content": "Variable.find(gameModel, \"tasks\");\n"
                                },
                                "custom": "<%  var fixedCosts=0, wages=0, total=0, taskTotal=0, projectFixedCost = Y.Wegas.Facade.Variable.cache.find('name', 'projectFixedCosts').getInstance().get('value'), projectUnworkedHours = Y.Wegas.Facade.Variable.cache.find('name', 'projectUnworkedHours').getInstance().get('value'), bacs = Y.Wegas.PMGHelper.getBACTotal(), overcost; for(var i=0; i<this.variable.get('items').length; i++) { var properties = this.variable.get('items')[i].getInstance().get('properties'); wages = wages + parseFloat(properties.wages); if (properties.completeness > 0) fixedCosts = fixedCosts + parseFloat(properties.fixedCosts); } taskTotal = wages + fixedCosts + projectUnworkedHours; total = taskTotal + projectFixedCost; overcost = (bacs <= 0 ? \"\" : Math.round(parseInt((total * 10000 / bacs), 10)/100) + \"% of BAC\"); %> <div class='projectTotalCost'><span class='label'>Actual Costs (AC)</span><span class='variableValue'><%= total %></span><span class='variablePercent'><%= overcost %></span></div>"
                            }
                        ]
                    },
                    {
                        "type": "List",
                        "cssClass": "pmg-overview-right",
                        "direction": "horizontal",
                        "name": "Execution overview",
                        "children": [
                            {
                                "type": "Text",
                                "cssClass": "pmg-overview-title",
                                "content": "<h2>Project execution details</h2>"
                            },
                            {
                                "type": "Template",
                                "cssClass": "pmg-project-details-content",
                                "variable": {
                                    "@class": "Script",
                                    "content": "Variable.find(gameModel, \"currentPhase\");\n"
                                },
                                "data": {
                                    "label": "Progress"
                                },
                                "custom": "<%  var projectCompleteness = Y.Wegas.Facade.Variable.cache.find('name', 'projectCompleteness').getInstance().get('value'), currentPhase = Y.Wegas.Facade.Variable.cache.find('name', 'currentPhase').getInstance().get('value'),currentPeriod = Y.Wegas.Facade.Variable.cache.find('name', 'currentPeriod').item(currentPhase -1).getInstance().get('value');%>\n\n<div class='projectCompleteness'><span class='label'>Progress</span><span class='variableValue'><%= parseInt(projectCompleteness) %>%</span></div>"
                            },
                            {
                                "type": "Template",
                                "cssClass": "pmg-project-details-content",
                                "variable": {
                                    "@class": "Script",
                                    "content": "Variable.find(gameModel, \"tasks\");\n"
                                },
                                "custom": "<% var projectFixedCost = Y.Wegas.Facade.Variable.cache.find('name', 'projectFixedCosts').getInstance().get('value'); %><div class='projectFixedCost'><span class='label'>Project Fixed Costs</span><span class='variableValue'><%= projectFixedCost %></span></div>"
                            },
                            {
                                "type": "Template",
                                "cssClass": "pmg-project-details-content",
                                "variable": {
                                    "@class": "Script",
                                    "content": "Variable.find(gameModel, \"tasks\");\n"
                                },
                                "custom": "<% var wages=0; for(var i=0; i<this.variable.get('items').length; i++) { var properties = this.variable.get('items')[i].getInstance().get('properties'); wages = wages + parseFloat(properties.wages); } %> <div class='wages'><span class='label'>Tasks Wages</span><span class='variableValue'><%= wages %></span></div>"
                            },
                            {
                                "type": "Template",
                                "cssClass": "pmg-project-details-content",
                                "variable": {
                                    "@class": "Script",
                                    "content": "Variable.find(gameModel, \"tasks\");\n"
                                },
                                "custom": "<% var fixedCosts=0; for(var i=0; i<this.variable.get('items').length; i++) { var properties = this.variable.get('items')[i].getInstance().get('properties'); if (properties.completeness > 0) fixedCosts = fixedCosts + parseFloat(properties.fixedCosts); } %><div class='fixedCosts'><span class='label'>Task Fixed Costs</span><span class='variableValue'><%= fixedCosts %></span></div>"
                            },
                            {
                                "type": "Template",
                                "cssClass": "pmg-project-details-content",
                                "variable": {
                                    "@class": "Script",
                                    "content": "Variable.find(gameModel, \"tasks\");\n"
                                },
                                "custom": "<% var projectUnworkedHours = Y.Wegas.Facade.Variable.cache.find('name', 'projectUnworkedHours').getInstance().get('value'); %><div class='unworkedHours'><span class='label'>Unworked Hours</span><span class='variableValue'><%= projectUnworkedHours %></span></div>"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "List",
                "cssClass": "charts-column",
                "direction": "horizontal",
                "name": "indicators",
                "children": [
                    {
                        "type": "PmgSlidePanel",
                        "cssClass": "indicators-management chart",
                        "title": "Indicators History: Management and Users",
                        "animation": false,
                        "openByDefault": true,
                        "children": [
                            {
                                "type": "Chart",
                                "chartType": "combo",
                                "variables": [
                                    {
                                        "name": "managementApproval",
                                        "label": "Management"
                                    },
                                    {
                                        "name": "userApproval",
                                        "label": "Users"
                                    }
                                ],
                                "hStart": 0,
                                "hStep": 1,
                                "hMinEnd": {
                                    "name": "executionPeriods"
                                },
                                "minValue": 0,
                                "maxValue": 200,
                                "vStepValue": 25,
                                "legendPosition": "bottom",
                                "horizontalGridlines": true,
                                "verticalGridlines": true
                            }
                        ]
                    },
                    {
                        "type": "PmgSlidePanel",
                        "cssClass": "indicators-quality chart",
                        "title": "Indicators History: Quality, Costs, and Shedule",
                        "animation": false,
                        "openByDefault": true,
                        "children": [
                            {
                                "type": "Chart",
                                "chartType": "combo",
                                "variables": [
                                    {
                                        "name": "costs",
                                        "label": "Costs"
                                    },
                                    {
                                        "name": "delay",
                                        "label": "Shedule"
                                    },
                                    {
                                        "name": "quality",
                                        "label": "Quality"
                                    }
                                ],
                                "hStart": 0,
                                "hStep": 1,
                                "hMinEnd": {
                                    "name": "executionPeriods"
                                },
                                "minValue": 0,
                                "maxValue": 200,
                                "vStepValue": 25,
                                "legendPosition": "bottom",
                                "horizontalGridlines": true,
                                "verticalGridlines": true
                            }
                        ]
                    }
                ]
            }
        ],
        "@name": "Project"
    },
    "3": {
        "type": "List",
        "cssClass": "task-planning-page",
        "direction": "vertical",
        "name": "folder",
        "children": [
            {
                "type": "PmgDatatable",
                "plugins": [
                    {
                        "fn": "Bac",
                        "cfg": {
                            "columnPosition": 4
                        }
                    },
                    {
                        "fn": "Taskonclickpopup",
                        "cfg": {
                            "width": "250px",
                            "column": 1
                        }
                    }
                ],
                "variable": {
                    "name": "tasks"
                },
                "columnsCfg": [
                    {
                        "key": "index",
                        "label": "No",
                        "sortable": false,
                        "allowHTML": true
                    },
                    {
                        "key": "label",
                        "label": "Name",
                        "sortable": false,
                        "allowHTML": true
                    },
                    {
                        "label": "Estimated</br>duration",
                        "width": "54px",
                        "name": "Estimatedduration",
                        "key": "instance%properties%duration",
                        "className": "right",
                        "sortable": false,
                        "allowHTML": true
                    },
                    {
                        "label": "Fixed costs",
                        "name": "Fixedcosts",
                        "key": "instance%properties%fixedCosts",
                        "className": "right",
                        "formatter": "rounded",
                        "sortable": false,
                        "allowHTML": true
                    },
                    {
                        "key": "requirements",
                        "label": "Ressources",
                        "formatter": "requieredRessources",
                        "sortable": false,
                        "allowHTML": true
                    },
                    {
                        "allowHTML": true,
                        "label": "Assigned resources",
                        "name": "assignedResources",
                        "formatter": "assignedRessources",
                        "sortable": false
                    }
                ],
                "defaultSort": null
            },
            {
                "type": "Template",
                "variable": {
                    "@class": "Script",
                    "content": "Variable.find(gameModel, \"tasks\");\n"
                },
                "data": {
                    "label": ""
                },
                "custom": "<b>Total BAC: <%= Y.Wegas.PMGHelper.getBACTotal() %></b>"
            }
        ],
        "@name": "Tasks (Planning phase)"
    },
    "4": {
        "type": "List",
        "cssClass": "gantt-planning-page",
        "direction": "vertical",
        "children": [
            {
                "type": "PmgDatatable",
                "plugins": [
                    {
                        "fn": "ScheduleDT",
                        "cfg": {
                            "variable": {
                                "name": "periodPhase3"
                            }
                        }
                    },
                    {
                        "fn": "Planification"
                    },
                    {
                        "fn": "Plannificationcolor"
                    },
                    {
                        "fn": "Taskonclickpopup"
                    }
                ],
                "variable": {
                    "name": "tasks"
                },
                "columnsCfg": [
                    {
                        "key": "index",
                        "label": "No",
                        "sortable": false,
                        "allowHTML": true
                    },
                    {
                        "key": "label",
                        "label": "Name",
                        "sortable": false,
                        "allowHTML": true
                    }
                ],
                "defaultSort": null
            }
        ],
        "@name": "Gantt (Planning phase)"
    },
    "5": {
        "type": "List",
        "direction": "vertical",
        "children": [
            {
                "type": "PmgResourcesPanels",
                "cssClass": "resources-page slidepaneled-page"
            }
        ],
        "@name": "Resources"
    },
    "6": {
        "type": "List",
        "cssClass": "action-page",
        "direction": "vertical",
        "name": "folder",
        "children": [
            {
                "type": "Text",
                "cssClass": "pmg-action-title",
                "content": "<div class=\"title title-list\">\n<h2>Available actions during this phase</h2>\n</div>\n<div class=\"title title-message\">\n<h2>Description</h2>\n</div>"
            },
            {
                "type": "MCQTabView",
                "variable": {
                    "content": "var currentPhase = Variable.find('currentPhase'); return Variable.find('actions').item(currentPhase.getValue(self) - 1);"
                },
                "highlightUnanswered": false
            },
            {
                "label": "",
                "type": "Button",
                "cssClass": "wegas-icon-pdf",
                "plugins": [
                    {
                        "fn": "PrintActionPlugin",
                        "cfg": {
                            "targetEvent": "click",
                            "root": {
                                "@class": "Script",
                                "content": "var currentPhase = Variable.find('currentPhase').getValue(self), i, q, items = [], item; q = Variable.find('actions').item(currentPhase - 1); if (q) { for (i in q.get('items')) { item = q.item(i); items.push(item); } } return items;"
                            },
                            "title": {
                                "@class": "Script",
                                "content": "var currentPhase = Variable.find('currentPhase').getValue(self) - 1, currentPeriod = Variable.find('currentPeriod').item(currentPhase).getValue(self); return '' + Variable.find('actions').item(currentPhase).get('label') + ' Actions';"
                            },
                            "outputType": "html"
                        }
                    },
                    {
                        "fn": "CSSStyles",
                        "cfg": {
                            "styles": {
                                "bottom": "0px",
                                "left": "0px",
                                "position": "absolute"
                            }
                        }
                    }
                ],
                "data": {}
            }
        ],
        "@name": "Actions"
    },
    "7": {
        "cssClass": "questions-page",
        "type": "List",
        "direction": "vertical",
        "children": [
            {
                "type": "Template",
                "cssClass": "pmg-question-title",
                "variable": {
                    "@class": "Script",
                    "content": "Variable.find(gameModel, \"timeUnit\");\n"
                },
                "data": {
                    "label": "week"
                },
                "custom": "<div class='title title-list'><h2>Questions to answer this <%= this.variable.getValue() %></h2></div><div class='title title-message'><h2>Details</h2></div>"
            },
            {
                "type": "MCQTabView",
                "variable": {
                    "content": "var currentPhase = Variable.find('currentPhase').getValue(self), currentPeriod = Variable.find('currentPeriod').item(currentPhase - 1).getValue(self), i, q, items = [], item; q = Variable.find('questions').item(currentPhase - 1); if (q) { for (i in q.get('items')) { item = q.item(i); if (item.get('@class') === 'QuestionDescriptor') { items.push(item); } else if (i == currentPeriod - 1 && item.get('@class') === 'ListDescriptor') { items = items.concat(item.flatten()); } } } return items;"
                }
            },
            {
                "label": "",
                "type": "Button",
                "cssClass": "wegas-icon-pdf",
                "plugins": [
                    {
                        "fn": "PrintActionPlugin",
                        "cfg": {
                            "targetEvent": "click",
                            "root": {
                                "@class": "Script",
                                "content": "var currentPhase = Variable.find('currentPhase').getValue(self), currentPeriod = Variable.find('currentPeriod').item(currentPhase - 1).getValue(self), i, q, items = [], item; q = Variable.find('questions').item(currentPhase - 1); if (q) { for (i in q.get('items')) { item = q.item(i); if (item.get('@class') === 'QuestionDescriptor') { items.push(item); } else if (i == currentPeriod - 1 && item.get('@class') === 'ListDescriptor') { items = items.concat(item.flatten()); } } } return items;"
                            },
                            "title": {
                                "@class": "Script",
                                "content": "var currentPhase = Variable.find('currentPhase').getValue(self) - 1, currentPeriod = Variable.find('currentPeriod').item(currentPhase).getValue(self); return '' + Variable.find('questions').item(currentPhase).get('label') + '(' + parseInt(currentPeriod, 10) + ') - Questions';"
                            },
                            "outputType": "html"
                        }
                    },
                    {
                        "fn": "CSSStyles",
                        "cfg": {
                            "styles": {
                                "bottom": "0px",
                                "left": "0px",
                                "position": "absolute"
                            }
                        }
                    }
                ],
                "data": {}
            }
        ],
        "@name": "Questions"
    },
    "8": {
        "type": "List",
        "cssClass": "inbox-page",
        "direction": "vertical",
        "name": "folder",
        "children": [
            {
                "type": "Text",
                "cssClass": "pmg-mail-title",
                "content": "<div class=\"title title-list\">\n<h2>Mailbox</h2>\n</div>\n<div class=\"title title-message\">\n<h2>Message</h2>\n</div>"
            },
            {
                "type": "InboxDisplay",
                "variable": {
                    "name": "inbox"
                },
                "template": "inbox",
                "setToReadAfter": 0.05,
                "autoOpenFirstMail": false
            }
        ],
        "@name": "Mailbox"
    },
    "9": {
        "type": "List",
        "cssClass": "history-page",
        "direction": "vertical",
        "name": "folder",
        "children": [
            {
                "type": "Text",
                "cssClass": "pmg-action-title",
                "content": "<div class=\"title title-list\">\n<h2>History</h2>\n</div>\n<div class=\"title title-message\">\n<h2>Details</h2>\n</div>"
            },
            {
                "type": "InboxDisplay",
                "variable": {
                    "name": "history"
                },
                "template": "clean",
                "setToReadAfter": 0.05,
                "autoOpenFirstMail": false
            }
        ],
        "@name": "History"
    },
    "10": {
        "cssClass": "evm-page",
        "direction": "vertical",
        "type": "List",
        "children": [
            {
                "type": "PmgSlidePanel",
                "title": "EVM",
                "cssClass": "evm",
                "animation": false,
                "children": [
                    {
                        "type": "Chart",
                        "width": "90%",
                        "height": "400px",
                        "chartType": "combo",
                        "horizontalGridlines": true,
                        "legendPosition": "bottom",
                        "verticalGridlines": true,
                        "hMinEnd": {
                            "name": "executionPeriods"
                        },
                        "minValue": 0,
                        "variables": [
                            {
                                "name": "planedValue",
                                "label": "PV (Planed Value)"
                            },
                            {
                                "name": "earnedValue",
                                "label": "EV (Earned Value)"
                            },
                            {
                                "name": "actualCost",
                                "label": "AC (Actual Cost)"
                            }
                        ]
                    }
                ]
            }
        ],
        "@name": "EVM"
    },
    "11": {
        "type": "List",
        "cssClass": "gantt-execution-page",
        "direction": "vertical",
        "children": [
            {
                "type": "PmgDatatable",
                "plugins": [
                    {
                        "fn": "ScheduleDT",
                        "cfg": {
                            "variable": {
                                "name": "periodPhase3"
                            }
                        }
                    },
                    {
                        "fn": "Plannificationcolor"
                    },
                    {
                        "fn": "PlannificationActivityColor"
                    },
                    {
                        "fn": "PlannificationProgressColor"
                    },
                    {
                        "fn": "Taskonclickpopup"
                    },
                    {
                        "fn": "PMGLineCompleteness"
                    }
                ],
                "variable": {
                    "name": "tasks"
                },
                "columnsCfg": [
                    {
                        "key": "index",
                        "label": "No",
                        "sortable": false,
                        "allowHTML": true
                    },
                    {
                        "key": "label",
                        "label": "Name",
                        "sortable": false,
                        "allowHTML": true
                    },
                    {
                        "label": "Realised",
                        "name": "Realised",
                        "width": "7%",
                        "key": "instance.properties.completeness",
                        "sortable": false,
                        "allowHTML": true,
                        "className": "right"
                    }
                ],
                "defaultSort": null
            },
            {
                "type": "Text",
                "content": "<div class=\"pmg-legend\">\n<div>\n<div class=\"baseline\">&nbsp;</div>\nBaseline</div>\n<div>\n<div class=\"worked\">&nbsp;</div>\nWorked</div>\n<div>\n<div class=\"fill100\">&nbsp;</div>\nProjection</div>\n</div>"
            }
        ],
        "@name": "Gantt (Execution phase)"
    },
    "12": {
        "cssClass": "task-execution-page",
        "type": "List",
        "direction": "vertical",
        "children": [
            {
                "type": "PmgDatatable",
                "variable": {
                    "name": "tasks"
                },
                "defaultSort": null,
                "columnsCfg": [
                    {
                        "key": "index",
                        "label": "No",
                        "sortable": false
                    },
                    {
                        "key": "label",
                        "label": "Name",
                        "sortable": false
                    },
                    {
                        "label": "Estimated</br>duration",
                        "width": "54px",
                        "name": "Estimatedduration",
                        "key": "instance.properties.duration",
                        "className": "right",
                        "sortable": false
                    },
                    {
                        "label": "Realised",
                        "name": "Realised",
                        "width": "7%",
                        "key": "instance.properties.completeness",
                        "className": "right",
                        "sortable": false
                    },
                    {
                        "name": "Quality",
                        "label": "Quality",
                        "className": "right",
                        "key": "instance.properties.quality",
                        "formatter": "quality",
                        "sortable": false
                    },
                    {
                        "label": "Wages",
                        "name": "Wages",
                        "className": "right",
                        "key": "instance.properties.wages",
                        "sortable": false
                    },
                    {
                        "label": "Fixed costs",
                        "name": "Fixedcosts",
                        "formatter": "rounded",
                        "className": "right",
                        "key": "instance.properties.fixedCosts",
                        "sortable": false
                    },
                    {
                        "label": "BAC",
                        "name": "bac",
                        "className": "right",
                        "key": "instance.properties.bac",
                        "sortable": false
                    },
                    {
                        "key": "requirements",
                        "label": "Resources",
                        "formatter": "requieredRessources",
                        "sortable": false
                    },
                    {
                        "label": "Assigned resources",
                        "name": "assignedResources",
                        "formatter": "assignedRessources",
                        "sortable": false
                    }
                ],
                "plugins": [
                    {
                        "fn": "Taskonclickpopup"
                    },
                    {
                        "fn": "PMGLineCompleteness"
                    }
                ]
            }
        ],
        "@name": "Tasks (Execution phase)"
    },
    "13": {
        "type": "PageLoader",
        "cssClass": "task-page",
        "pageLoaderId": "taskPageLoader",
        "variable": {
            "name": "taskPage"
        }
    },
    "14": {
        "type": "PageLoader",
        "cssClass": "gantt-page",
        "pageLoaderId": "GanttPage",
        "variable": {
            "name": "ganttPage"
        }
    },
    "15": {
        "type": "AbsoluteLayout",
        "cssClass": "home-page",
        "children": [
            {
                "type": "Template",
                "cssClass": "pmg-welcome-text",
                "custom": "<%== this.value || 'Unable to find welcome text' %>",
                "data": {},
                "variable": {
                    "name": "homeText"
                }
            },
            {
                "type": "Text",
                "cssClass": "pmg-news-header",
                "content": "<div class='title'><h2>News</h2></div></div>"
            },
            {
                "type": "InboxList",
                "cssClass": "pmg-news-content",
                "variable": {
                    "name": "news"
                }
            }
        ],
        "@name": "Home"
    },
    "16": {
        "type": "AbsoluteLayout",
        "cssClass": "pmg-properties",
        "children": [
            {
                "type": "AbsoluteLayout",
                "cssClass": "pmg-properties-left",
                "children": [
                    {
                        "type": "Text",
                        "cssClass": "pmg-properties-title",
                        "plugins": [
                            {
                                "fn": "ConditionalDisable",
                                "cfg": {
                                    "condition": {
                                        "@class": "Script",
                                        "content": "var advLimitDesc;\ntry {advLimitDesc = Variable.find(gameModel, \"advancementLimit\");} catch(e){}\nreturn advLimitDesc !== undefined;\n"
                                    },
                                    "attribute": "cssClass",
                                    "value": "hidden"
                                }
                            }
                        ],
                        "content": "<span>Advancement limit</span>"
                    },
                    {
                        "label": "<span class='checkbox'>Advancement limit</span>",
                        "type": "Button",
                        "cssClass": "pmg-properties-button",
                        "plugins": [
                            {
                                "fn": "ExecuteScriptAction",
                                "cfg": {
                                    "targetEvent": "click",
                                    "onClick": {
                                        "@class": "Script",
                                        "language": "JavaScript",
                                        "content": "var advLimitDesc; try {advLimitDesc = Variable.find(gameModel, \"advancementLimit\");} catch (e){}\n if (advLimitDesc != undefined){ advLimitDesc.setValue(self, !advLimitDesc.getValue(self));};"
                                    }
                                }
                            },
                            {
                                "fn": "ConditionalDisable",
                                "cfg": {
                                    "condition": {
                                        "@class": "Script",
                                        "content": "var  advLimitDesc; try {advLimitDesc = Variable.find(gameModel, \"advancementLimit\");} catch(e){} return (advLimitDesc === undefined || advLimitDesc.getValue(self));",
                                        "language": "JavaScript"
                                    },
                                    "attribute": "cssClass",
                                    "value": "selected"
                                }
                            },
                            {
                                "fn": "ConditionalDisable2",
                                "cfg": {
                                    "condition": {
                                        "@class": "Script",
                                        "content": "var  advLimitDesc; try {advLimitDesc = Variable.find(gameModel, \"advancementLimit\");} catch(e){} return (advLimitDesc === undefined);",
                                        "language": "JavaScript"
                                    },
                                    "attribute": "cssClass",
                                    "value": "hidden"
                                }
                            }
                        ]
                    },
                    {
                        "cssClass": "pmg-advancement-limit-edtion",
                        "type": "AdvancementLimit"
                    }]
            },
            {
                "type": "AbsoluteLayout",
                "cssClass": "pmg-properties-right",
                "children": [
                    {
                        "type": "Text",
                        "content": "<span>Options</span>",
                        "cssClass": "pmg-properties-title"
                    },
                    {
                        "label": "<span class='checkbox'>Autoreservation</span>",
                        "type": "Button",
                        "cssClass": "pmg-properties-button",
                        "plugins": [
                            {
                                "fn": "ExecuteScriptAction",
                                "cfg": {
                                    "targetEvent": "click",
                                    "onClick": {
                                        "@class": "Script",
                                        "content": "var blnDesc = Variable.find(gameModel, \"autoReservation\"); blnDesc.setValue(self, ! blnDesc.getValue(self));"
                                    }
                                }
                            },
                            {
                                "fn": "ConditionalDisable",
                                "cfg": {
                                    "condition": {
                                        "@class": "Script",
                                        "content": "Variable.find(gameModel, \"autoReservation\").getValue(self);\n"
                                    },
                                    "attribute": "cssClass",
                                    "value": "selected"
                                }
                            }
                        ],
                        "data": {}
                    },
                    {
                        "label": "<span class='checkbox'>Force question replies</span>",
                        "type": "Button",
                        "cssClass": "pmg-properties-button",
                        "plugins": [
                            {
                                "fn": "ExecuteScriptAction",
                                "cfg": {
                                    "targetEvent": "click",
                                    "onClick": {
                                        "@class": "Script",
                                        "content": "var blnDesc = Variable.find(gameModel, \"forceQuestionReplies\"); blnDesc.setValue(self, ! blnDesc.getValue(self));"
                                    }
                                }
                            },
                            {
                                "fn": "ConditionalDisable",
                                "cfg": {
                                    "condition": {
                                        "@class": "Script",
                                        "content": "Variable.find(gameModel, \"forceQuestionReplies\").getValue(self);\n"
                                    },
                                    "attribute": "cssClass",
                                    "value": "selected"
                                }
                            }
                        ],
                        "data": {}
                    },
                    {
                        "label": "<span class='checkbox'>EVM</span>",
                        "type": "Button",
                        "cssClass": "pmg-properties-button",
                        "plugins": [
                            {
                                "fn": "ExecuteScriptAction",
                                "cfg": {
                                    "targetEvent": "click",
                                    "onClick": {
                                        "@class": "Script",
                                        "content": "var blnDesc = Variable.find(gameModel, \"evm\"); blnDesc.setValue(self, ! blnDesc.getValue(self));"
                                    }
                                }
                            },
                            {
                                "fn": "ConditionalDisable",
                                "cfg": {
                                    "condition": {
                                        "@class": "Script",
                                        "content": "Variable.find(gameModel, \"evm\").getValue(self);\n"
                                    },
                                    "attribute": "cssClass",
                                    "value": "selected"
                                }
                            }
                        ],
                        "data": {}
                    }, {
                        "label": "<span class='checkbox'>Burndowns</span>",
                        "type": "Button",
                        "cssClass": "pmg-properties-button",
                        "plugins": [
                            {
                                "fn": "ExecuteScriptAction",
                                "cfg": {
                                    "targetEvent": "click",
                                    "onClick": {
                                        "@class": "Script",
                                        "content": "var blnDesc = Variable.find(gameModel, \"burndownEnabled\"); blnDesc.setValue(self, ! blnDesc.getValue(self));"
                                    }
                                }
                            },
                            {
                                "fn": "ConditionalDisable",
                                "cfg": {
                                    "condition": {
                                        "@class": "Script",
                                        "content": "Variable.find(gameModel, \"burndownEnabled\").getValue(self);\n"
                                    },
                                    "attribute": "cssClass",
                                    "value": "selected"
                                }
                            }
                        ],
                        "data": {}
                    }
                ]
            }
        ],
        "@name": "Properties"
    },
    "18": {
        "@name": "Statistics",
        "type": "List",
        "children": [
            {
                "type": "Statistics"
            }
        ]
    },
    "19": {
        "@class": "Q1 Analysis",
        "cssClass": "evm-page",
        "direction": "vertical",
        "type": "List",
        "children": [
            {
                "type": "PmgSlidePanel",
                "title": "Questions Analysis",
                "cssClass": "evm",
                "animation": false,
                "children": [
                    {
                        "height": "200px",
                        "chartType": "combo",
                        "width": "90%",
                        "horizontalGridlines": true,
                        "legendPosition": "bottom",
                        "type": "Chart",
                        "verticalGridlines": true,
                        "hMinEnd": {
                            "name": "executionPeriods"
                        },
                        "minValue": 0,
                        "maxValue": 200,
                        "vStepValue": 25,
                        "variables": [
                            {
                                "name": "managementApproval",
                                "label": "Management"
                            }, {
                                "name": "userApproval",
                                "label": "Users"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    "20": {
        "cssClass": "pmg-iterations-page slidepaneled-page",
        "type": "List",
        "direction": "vertical",
        "children": [{
                "type": "Text",
                "content": "<div class=\"pmg-title\">Iterations</div>"
            }, {
                "type": "PmgIterationsPanels",
                "cssClass": "pmg-iterations-panels"
            }
        ],
        "@name": "Burndowns"
    },
    "Team": {
        "type": "EditTeam"
    },
    "UserPreferences": {
        "type": "Form",
        "plugins": [
            {
                "fn": "UserPreferences"
            }
        ]
    }
}
