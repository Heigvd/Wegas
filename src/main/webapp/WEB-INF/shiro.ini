[main]
# Credential Matcher
sha256Matcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
sha256Matcher.hashAlgorithmName=SHA-256

# Jpa Realm
jpaRealm=com.wegas.core.security.jparealm.JpaRealm
jpaRealm.credentialsMatcher = $sha256Matcher
#jpaRealm.permissionsLookupEnabled=true

# Jdbc Realm
saltedJdbcRealm=com.wegas.core.security.jdbcrealm.JNDIAndSaltAwareJdbcRealm
saltedJdbcRealm.jndiDataSourceName=jdbc/wegas_dev
saltedJdbcRealm.permissionsLookupEnabled=true
saltedJdbcRealm.authenticationQuery = select password, salt from sec_users where name = ?
saltedJdbcRealm.userRolesQuery = select role_name from sec_users_roles where user_name = ?
saltedJdbcRealm.permissionsQuery = select permission from sec_roles_permissions where role_name = ?
saltedJdbcRealm.credentialsMatcher = $sha256Matcher

# Facebook Realm
fbCredentialsMatcher = com.wegas.core.security.facebook.FacebookCredentialsMatcher
fbRealm = com.wegas.core.security.facebook.FacebookRealm
fbRealm.credentialsMatcher = $fbCredentialsMatcher

# Assign realms to security manager
securityManager.realms = $jpaRealm, $fbRealm

# Set authentication filter
authc = com.wegas.core.security.servlet.AuthenticationFilter
authc.loginUrl = /wegas-app/view/login.html
authc.successUrl  = /wegas-app/view/lobby.html

# Redirect to error page if user does not have access rights
# roles.unauthorizedUrl = /wegas-app/view/error/accessdenied.html

[urls]
# force ssl for login page
#/wegas-app/views/account.html=ssl[8443], authc
#/wegas-editor = anon
#/wegas-signup = anon
#/**=authc
/wegas-app/view/login.html=authc
/wegas-app/view/lobby.html=authc
/wegas-app/view/play.html=authc
/wegas-editor/view/lobby.html=authc
/wegas-editor/view/editor.html=authc